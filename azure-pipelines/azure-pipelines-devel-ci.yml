# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pr:
  branches:
    include:
    - devel

jobs:
- job: Unit_Tests_On_PowerShell_Ubuntu
  displayName: 'Unit Tests on PowerShell, Ubuntu'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: PowerShell@2
    displayName: 'Run Unit Tests'
    inputs:
      pwsh: true
      targetType: Inline
      script: ./azure-pipelines/scripts/Invoke-RunTests.ps1
    env:
      LocalPath: $(Build.Repository.LocalPath)
      JobName: $(Agent.JobName)

- job: Unit_Tests_On_PowerShell_macOS
  displayName: 'Unit Tests on PowerShell, macOS'
  pool:
    vmImage: 'macOS-latest'
  steps:
  - task: PowerShell@2
    displayName: 'Run Unit Tests'
    inputs:
      pwsh: true
      targetType: Inline
      script: ./azure-pipelines/scripts/Invoke-RunTests.ps1
    env:
      LocalPath: $(Build.Repository.LocalPath)
      JobName: $(Agent.JobName)

- job: Unit_Tests_On_PowerShell_Server_2019
  displayName: 'Unit Tests on PowerShell, Server 2019'
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: PowerShell@2
    displayName: 'Run Unit Tests'
    inputs:
      pwsh: true
      targetType: Inline
      script: ./azure-pipelines/scripts/Invoke-RunTests.ps1
    env:
      LocalPath: $(Build.Repository.LocalPath)
      JobName: $(Agent.JobName)

- job: Unit_Tests_On_Windows_PowerShell_Server_2019
  displayName: 'Unit Tests on Windows PowerShell, Server 2019'
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: PowerShell@2
    displayName: 'Run Unit Tests'
    inputs:
      pwsh: false
      targetType: Inline
      script: ./azure-pipelines/scripts/Invoke-RunTests.ps1
    env:
      LocalPath: $(Build.Repository.LocalPath)
      JobName: $(Agent.JobName)
