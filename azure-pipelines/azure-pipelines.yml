# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
- job: ubuntu-jobs
  displayName: 'ubuntu-jobs'

  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - script: echo Hello, world!
    displayName: 'Run a one-line script'

  - script: |
      echo Add other tasks to build, test, and deploy your project.
      echo See https://aka.ms/yaml
    displayName: 'Run a multi-line script'

  - script: |
      echo "Build.ArtifactStagingDirectory " $(Build.ArtifactStagingDirectory)
      echo "Build.BuildId " $(Build.BuildId)
      echo "Build.BuildNumber " $(Build.BuildNumber)
      echo "Build.BuildUri " $(Build.BuildUri)
      echo "Build.BinariesDirectory " $(Build.BinariesDirectory)
      echo "Build.DefinitionName " $(Build.DefinitionName)
      echo "Build.DefinitionVersion " $(Build.DefinitionVersion)
      echo "Build.QueuedBy " $(Build.QueuedBy)
      echo "Build.QueuedById " $(Build.QueuedById)
      echo "Build.Reason " $(Build.Reason)
      echo "Build.Repository.Clean " $(Build.Repository.Clean)
      echo "Build.Repository.LocalPath " $(Build.Repository.LocalPath)
      echo "Build.Repository.ID " $(Build.Repository.ID)
      echo "Build.Repository.Name " $(Build.Repository.Name)
      echo "Build.Repository.Provider " $(Build.Repository.Provider)
      echo "Build.Repository.Tfvc.Workspace " $(Build.Repository.Tfvc.Workspace)
      echo "Build.Repository.Uri " $(Build.Repository.Uri)
      echo "Build.RequestedFor " $(Build.RequestedFor)
      echo "Build.RequestedForEmail " $(Build.RequestedForEmail)
      echo "Build.RequestedForId " $(Build.RequestedForId)
      echo "Build.SourceBranch " $(Build.SourceBranch)
      echo "Build.SourceBranchName " $(Build.SourceBranchName)
      echo "Build.SourcesDirectory " $(Build.SourcesDirectory)
      echo "Build.SourceVersion " $(Build.SourceVersion)
      echo "Build.SourceVersionMessage " $(Build.SourceVersionMessage)
      echo "Build.StagingDirectory " $(Build.StagingDirectory)
      echo "Build.Repository.Git.SubmoduleCheckout " $(Build.Repository.Git.SubmoduleCheckout)
      echo "Build.SourceTfvcShelveset " $(Build.SourceTfvcShelveset)
      echo "Build.TriggeredBy.BuildId " $(Build.TriggeredBy.BuildId)
      echo "Build.TriggeredBy.DefinitionId " $(Build.TriggeredBy.DefinitionId)
      echo "Build.TriggeredBy.DefinitionName " $(Build.TriggeredBy.DefinitionName)
      echo "Build.TriggeredBy.BuildNumber " $(Build.TriggeredBy.BuildNumber)
      echo "Build.TriggeredBy.ProjectID " $(Build.TriggeredBy.ProjectID)
      echo "Common.TestResultsDirectory " $(Common.TestResultsDirectory)
      echo "System Vars"
      echo "system.pullRequest.sourceBranch " $(system.pullRequest.sourceBranch)
      echo "system.pullRequest.targetBranch " $(system.pullRequest.targetBranch)
    displayName: 'Display environment variables'

- job: Windows_PowerShell_on_Server_2019
  displayName: 'Windows PowerShell on Server 2019'
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: PowerShell@2
    displayName: 'Run PowerShell Core tests on Windows 2019'
    inputs:
      pwsh: false
      targetType: Inline
      script: ./azure-pipelines/scripts/build.ps1