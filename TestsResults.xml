<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="396" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2019-07-16" time="01:35:11">
  <environment user="appveyor" machine-name="APPVYR-WIN" cwd="C:\projects\powershell-module" user-domain="APPVYR-WIN" platform="Microsoft Windows Server 2012 R2 Datacenter|C:\windows|\Device\Harddisk0\Partition5" nunit-version="2.5.8.0" os-version="6.3.9600" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="29.4346" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Export-RubrikDatabase.Tests.ps1" executed="True" result="Success" success="True" time="1.8292" asserts="0" description="C:\projects\powershell-module\tests\Export-RubrikDatabase.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Export-RubrikDatabase" executed="True" result="Success" success="True" time="1.342" asserts="0" description="Public/Export-RubrikDatabase">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="1.2451" asserts="0" description="Parameters">
                <results>
                  <test-suite type="TestFixture" name="Command Execution" executed="True" result="Success" success="True" time="0.7732" asserts="0" description="Command Execution">
                    <results>
                      <test-case description="Should return status of queued" name="Public/Export-RubrikDatabase.Parameters.Command Execution.Should return status of queued" time="0.5789" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.1237" asserts="0" description="Parameter Validation">
                    <results>
                      <test-case description="Parameter id must be specified" name="Public/Export-RubrikDatabase.Parameters.Parameter Validation.Parameter id must be specified" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parameter id cannot be $null or empty" name="Public/Export-RubrikDatabase.Parameters.Parameter Validation.Parameter id cannot be $null or empty" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parameter set cannot be resolved." name="Public/Export-RubrikDatabase.Parameters.Parameter Validation.Parameter set cannot be resolved." time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="RecoveryDateTime must be a date." name="Public/Export-RubrikDatabase.Parameters.Parameter Validation.RecoveryDateTime must be a date." time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Export-RubrikReport.Tests.ps1" executed="True" result="Success" success="True" time="0.4352" asserts="0" description="C:\projects\powershell-module\tests\Export-RubrikReport.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Export-RubrikReport" executed="True" result="Success" success="True" time="0.1761" asserts="0" description="Public/Export-RubrikReport">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.1551" asserts="0" description="Parameters">
                <results>
                  <test-suite type="TestFixture" name="Report Filtering" executed="True" result="Success" success="True" time="0.081" asserts="0" description="Report Filtering">
                    <results>
                      <test-case description="Should return url for report" name="Public/Export-RubrikReport.Parameters.Report Filtering.Should return url for report" time="0.052" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0323" asserts="0" description="Parameter Validation">
                    <results>
                      <test-case description="Parameter id must be specified" name="Public/Export-RubrikReport.Parameters.Parameter Validation.Parameter id must be specified" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parameter id cannot be $null or empty" name="Public/Export-RubrikReport.Parameters.Parameter Validation.Parameter id cannot be $null or empty" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Export-RubrikVM.Tests.ps1" executed="True" result="Success" success="True" time="0.5239" asserts="0" description="C:\projects\powershell-module\tests\Export-RubrikVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Export-RubrikVM" executed="True" result="Success" success="True" time="0.2508" asserts="0" description="Public/Export-RubrikVM">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.2268" asserts="0" description="Parameters">
                <results>
                  <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0312" asserts="0" description="Parameter Validation">
                    <results>
                      <test-case description="Parameter id cannot be $null or empty" name="Public/Export-RubrikVM.Parameters.Parameter Validation.Parameter id cannot be $null or empty" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parameter DatastoreId cannot be $null or empty" name="Public/Export-RubrikVM.Parameters.Parameter Validation.Parameter DatastoreId cannot be $null or empty" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-case description="Should Return status of QUEUED" name="Public/Export-RubrikVM.Parameters.Should Return status of QUEUED" time="0.1487" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikAPIData.Tests.ps1" executed="True" result="Success" success="True" time="3.135" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikAPIData.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Private/Get-RubrikAPIData" executed="True" result="Success" success="True" time="2.8755" asserts="0" description="Private/Get-RubrikAPIData">
            <results>
              <test-suite type="TestFixture" name="Function specific tests" executed="True" result="Success" success="True" time="2.7761" asserts="0" description="Function specific tests">
                <results>
                  <test-suite type="ParameterizedTest" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - &lt;f&gt; test" executed="True" result="Success" success="True" time="1.739" asserts="0" description="Get-RubrikAPIData - &lt;f&gt; test">
                    <results>
                      <test-case description="Get-RubrikAPIData - Connect-Rubrik test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Connect-Rubrik test" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Disconnect-Rubrik test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Disconnect-Rubrik test" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Export-RubrikDatabase test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Export-RubrikDatabase test" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Export-RubrikReport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Export-RubrikReport test" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Export-RubrikVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Export-RubrikVM test" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikAPIToken test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikAPIToken test" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikAPIVersion test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikAPIVersion test" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikAvailabilityGroup test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikAvailabilityGroup test" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikBootStrap test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikBootStrap test" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikDatabase test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikDatabase test" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikDatabaseFiles test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikDatabaseFiles test" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikDatabaseMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikDatabaseMount test" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikDatabaseRecoverableRange test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikDatabaseRecoverableRange test" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikEvent test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikEvent test" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikFileset test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikFileset test" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikFilesetTemplate test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikFilesetTemplate test" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikHost test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikHost test" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikHyperVVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikHyperVVM test" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikLDAP test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikLDAP test" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikLogShipping test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikLogShipping test" time="0.0854" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikManagedVolume test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikManagedVolume test" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikManagedVolumeExport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikManagedVolumeExport test" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikMount test" time="0.022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikNASShare test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikNASShare test" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikNutanixVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikNutanixVM test" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikOracleDB test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikOracleDB test" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikOrganization test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikOrganization test" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikReport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikReport test" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikReportData test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikReportData test" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikRequest test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikRequest test" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikSetting test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikSetting test" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikSLA test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikSLA test" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikSnapshot test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikSnapshot test" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikSoftwareVersion test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikSoftwareVersion test" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikSQLInstance test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikSQLInstance test" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikSupportTunnel test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikSupportTunnel test" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikUnmanagedObject test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikUnmanagedObject test" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVCenter test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVCenter test" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVersion test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVersion test" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVM test" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVMSnapshot test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVMSnapshot test" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVMwareDatastore test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVMwareDatastore test" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVMwareHost test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVMwareHost test" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVolumeGroup test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVolumeGroup test" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVolumeGroupMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVolumeGroupMount test" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikAPIToken test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikAPIToken test" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikBootStrap test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikBootStrap test" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikDatabaseMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikDatabaseMount test" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikFileset test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikFileset test" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikFilesetTemplate test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikFilesetTemplate test" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikHost test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikHost test" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikLDAP test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikLDAP test" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikLogBackup test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikLogBackup test" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikLogShipping test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikLogShipping test" time="0.0122" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikManagedVolume test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikManagedVolume test" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikManagedVolumeExport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikManagedVolumeExport test" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikMount test" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikNASShare test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikNASShare test" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikReport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikReport test" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikSLA test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikSLA test" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikSnapshot test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikSnapshot test" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikVCenter test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikVCenter test" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikVMDKMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikVMDKMount test" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikVolumeGroupMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikVolumeGroupMount test" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Protect-RubrikDatabase test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Protect-RubrikDatabase test" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Protect-RubrikFileset test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Protect-RubrikFileset test" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Protect-RubrikHyperVVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Protect-RubrikHyperVVM test" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Protect-RubrikNutanixVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Protect-RubrikNutanixVM test" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Protect-RubrikTag test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Protect-RubrikTag test" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Protect-RubrikVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Protect-RubrikVM test" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Register-RubrikBackupService test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Register-RubrikBackupService test" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikAPIToken test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikAPIToken test" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikDatabaseMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikDatabaseMount test" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikFileset test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikFileset test" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikHost test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikHost test" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikLogShipping test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikLogShipping test" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikManagedVolume test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikManagedVolume test" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikManagedVolumeExport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikManagedVolumeExport test" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikMount test" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikNASShare test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikNASShare test" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikReport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikReport test" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikSLA test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikSLA test" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikUnmanagedObject test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikUnmanagedObject test" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikVCenter test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikVCenter test" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikVMSnapshot test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikVMSnapshot test" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikVolumeGroupMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikVolumeGroupMount test" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Reset-RubrikLogShipping test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Reset-RubrikLogShipping test" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Restore-RubrikDatabase test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Restore-RubrikDatabase test" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikAvailabilityGroup test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikAvailabilityGroup test" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikBlackout test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikBlackout test" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikDatabase test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikDatabase test" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikHyperVVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikHyperVVM test" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikLogShipping test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikLogShipping test" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikManagedVolume test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikManagedVolume test" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikMount test" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikNASShare test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikNASShare test" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikNutanixVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikNutanixVM test" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikSetting test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikSetting test" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikSLA test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikSLA test" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikSQLInstance test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikSQLInstance test" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikSupportTunnel test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikSupportTunnel test" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikVCenter test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikVCenter test" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikVM test" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikVolumeFilterDriver test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikVolumeFilterDriver test" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Start-RubrikManagedVolumeSnapshot test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Start-RubrikManagedVolumeSnapshot test" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Stop-RubrikManagedVolumeSnapshot test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Stop-RubrikManagedVolumeSnapshot test" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Update-RubrikHost test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Update-RubrikHost test" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Update-RubrikVCenter test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Update-RubrikVCenter test" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Update-RubrikVMwareVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Update-RubrikVMwareVM test" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Failure tests, validate incorrect input" executed="True" result="Success" success="True" time="0.0476" asserts="0" description="Failure tests, validate incorrect input">
                <results>
                  <test-case description="Get-RubrikAPIData - Incorrect version number, should fail" name="Private/Get-RubrikAPIData.Failure tests, validate incorrect input.Get-RubrikAPIData - Incorrect version number, should fail" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Get-RubrikAPIData - Non-existent function, should fail" name="Private/Get-RubrikAPIData.Failure tests, validate incorrect input.Get-RubrikAPIData - Non-existent function, should fail" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikAPIToken.Tests.ps1" executed="True" result="Success" success="True" time="0.5283" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikAPIToken.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikAPIToken" executed="True" result="Success" success="True" time="0.265" asserts="0" description="Public/Get-RubrikAPIToken">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.246" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 4" name="Public/Get-RubrikAPIToken.Results Filtering.Should Return count of 4" time="0.052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return count of 3" name="Public/Get-RubrikAPIToken.Results Filtering.Should Return count of 3" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return 11111" name="Public/Get-RubrikAPIToken.Results Filtering.Should Return 11111" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return count of 0 " name="Public/Get-RubrikAPIToken.Results Filtering.Should return count of 0 " time="0.0307" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter UserID cannot be $null" name="Public/Get-RubrikAPIToken.Results Filtering.Parameter UserID cannot be $null" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter UserId cannot be empty" name="Public/Get-RubrikAPIToken.Results Filtering.Parameter UserId cannot be empty" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikEvent.Tests.ps1" executed="True" result="Success" success="True" time="0.4171" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikEvent.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikEvent" executed="True" result="Success" success="True" time="0.1322" asserts="0" description="Public/Get-RubrikEvent">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.1163" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 5" name="Public/Get-RubrikEvent.Results Filtering.Should Return count of 5" time="0.0627" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not run with Name parameter" name="Public/Get-RubrikEvent.Results Filtering.Should not run with Name parameter" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikHost.Tests.ps1" executed="True" result="Success" success="True" time="0.4858" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikHost.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikHost" executed="True" result="Success" success="True" time="0.2249" asserts="0" description="Public/Get-RubrikHost">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.2068" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 5" name="Public/Get-RubrikHost.Results Filtering.Should Return count of 5" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return host05" name="Public/Get-RubrikHost.Results Filtering.Should Return host05" time="0.0304" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return Host:::22222" name="Public/Get-RubrikHost.Results Filtering.Should Return Host:::22222" time="0.0231" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return count of 0 " name="Public/Get-RubrikHost.Results Filtering.Should return count of 0 " time="0.0297" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikHyperVVM.Tests.ps1" executed="True" result="Success" success="True" time="0.6675" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikHyperVVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikHyperVVM" executed="True" result="Success" success="True" time="0.3439" asserts="0" description="Public/Get-RubrikHyperVVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.1077" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="should overwrite $SLAID" name="Public/Get-RubrikHyperVVM.Parameter/SLA.should overwrite $SLAID" time="0.0592" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/SLAID" executed="True" result="Success" success="True" time="0.119" asserts="0" description="Parameter/SLAID">
                <results>
                  <test-case description="should not overwrite $SLAID" name="Public/Get-RubrikHyperVVM.Parameter/SLAID.should not overwrite $SLAID" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0916" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Name cannot be $null" name="Public/Get-RubrikHyperVVM.Parameter Validation.Parameter Name cannot be $null" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Name cannot be empty" name="Public/Get-RubrikHyperVVM.Parameter Validation.Parameter Name cannot be empty" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be $null" name="Public/Get-RubrikHyperVVM.Parameter Validation.Parameter ID cannot be $null" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Get-RubrikHyperVVM.Parameter Validation.Parameter ID cannot be empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters Id and Name cannot be simultaneously used" name="Public/Get-RubrikHyperVVM.Parameter Validation.Parameters Id and Name cannot be simultaneously used" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikLDAP.Tests.ps1" executed="True" result="Success" success="True" time="0.5031" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikLDAP.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikLDAP" executed="True" result="Success" success="True" time="0.2193" asserts="0" description="Public/Get-RubrikLDAP">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.2006" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="Should return local" name="Public/Get-RubrikLDAP.Parameter/SLA.Should return local" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return rubrik.com" name="Public/Get-RubrikLDAP.Parameter/SLA.Should return rubrik.com" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Output should be PSCustomObject" name="Public/Get-RubrikLDAP.Parameter/SLA.Output should be PSCustomObject" time="0.0465" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikManagedVolume.Tests.ps1" executed="True" result="Success" success="True" time="0.4989" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikManagedVolume.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikManagedVolume" executed="True" result="Success" success="True" time="0.2444" asserts="0" description="Public/Get-RubrikManagedVolume">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.2288" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 2" name="Public/Get-RubrikManagedVolume.Results Filtering.Should Return count of 2" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Name filter non existant should return count of 0" name="Public/Get-RubrikManagedVolume.Results Filtering.Name filter non existant should return count of 0" time="0.026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Name Filter - ID should be ManagedVolume:::22222" name="Public/Get-RubrikManagedVolume.Results Filtering.Name Filter - ID should be ManagedVolume:::22222" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="SLA Filter should be count of 1" name="Public/Get-RubrikManagedVolume.Results Filtering.SLA Filter should be count of 1" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing ID Exception" name="Public/Get-RubrikManagedVolume.Results Filtering.Missing ID Exception" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikManagedVolumeExport.Tests.ps1" executed="True" result="Success" success="True" time="0.401" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikManagedVolumeExport.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikManagedVolumeExport" executed="True" result="Success" success="True" time="0.1468" asserts="0" description="Public/Get-RubrikManagedVolumeExport">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.1298" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Getting all exports should return count of 3" name="Public/Get-RubrikManagedVolumeExport.Results Filtering.Getting all exports should return count of 3" time="0.0285" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Source name filter non existant name should return count of 0" name="Public/Get-RubrikManagedVolumeExport.Results Filtering.Source name filter non existant name should return count of 0" time="0.023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Source name filter on individual name should return id of 33333-22222-33333" name="Public/Get-RubrikManagedVolumeExport.Results Filtering.Source name filter on individual name should return id of 33333-22222-33333" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing id value should throw exception" name="Public/Get-RubrikManagedVolumeExport.Results Filtering.Missing id value should throw exception" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikNutanixVM.Tests.ps1" executed="True" result="Success" success="True" time="0.5941" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikNutanixVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikNutanixVM" executed="True" result="Success" success="True" time="0.318" asserts="0" description="Public/Get-RubrikNutanixVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.0894" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="should overwrite $SLAID" name="Public/Get-RubrikNutanixVM.Parameter/SLA.should overwrite $SLAID" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/SLAID" executed="True" result="Success" success="True" time="0.1274" asserts="0" description="Parameter/SLAID">
                <results>
                  <test-case description="should not overwrite $SLAID" name="Public/Get-RubrikNutanixVM.Parameter/SLAID.should not overwrite $SLAID" time="0.026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.077" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Name cannot be $null" name="Public/Get-RubrikNutanixVM.Parameter Validation.Parameter Name cannot be $null" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Name cannot be empty" name="Public/Get-RubrikNutanixVM.Parameter Validation.Parameter Name cannot be empty" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be $null" name="Public/Get-RubrikNutanixVM.Parameter Validation.Parameter ID cannot be $null" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Get-RubrikNutanixVM.Parameter Validation.Parameter ID cannot be empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters Id and Name cannot be simultaneously used" name="Public/Get-RubrikNutanixVM.Parameter Validation.Parameters Id and Name cannot be simultaneously used" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikOracleDB.Tests.ps1" executed="True" result="Success" success="True" time="0.6695" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikOracleDB.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikOracleDB" executed="True" result="Success" success="True" time="0.4076" asserts="0" description="Public/Get-RubrikOracleDB">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.1097" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="should overwrite $SLAID" name="Public/Get-RubrikOracleDB.Parameter/SLA.should overwrite $SLAID" time="0.0582" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/SLAID" executed="True" result="Success" success="True" time="0.2657" asserts="0" description="Parameter/SLAID">
                <results>
                  <test-case description="SLAID Query should return OracleDB1 DB" name="Public/Get-RubrikOracleDB.Parameter/SLAID.SLAID Query should return OracleDB1 DB" time="0.0273" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="SLAID Query should return OracleDB1 SLA" name="Public/Get-RubrikOracleDB.Parameter/SLAID.SLAID Query should return OracleDB1 SLA" time="0.0251" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikSLA.Tests.ps1" executed="True" result="Success" success="True" time="1.7479" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikSLA.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikSLA" executed="True" result="Success" success="True" time="1.3534" asserts="0" description="Public/Get-RubrikSLA">
            <results>
              <test-suite type="TestFixture" name="Parameter/Name-v1" executed="True" result="Success" success="True" time="0.7225" asserts="0" description="Parameter/Name-v1">
                <results>
                  <test-case description="should filter on SLA name" name="Public/Get-RubrikSLA.Parameter/Name-v1.should filter on SLA name" time="0.035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="frequencies array should be populated" name="Public/Get-RubrikSLA.Parameter/Name-v1.frequencies array should be populated" time="0.0288" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v1.hourly frequency set" time="0.0228" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v1.hourly retention set" time="0.072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v1.daily frequency set" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily retention set" name="Public/Get-RubrikSLA.Parameter/Name-v1.daily retention set" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v1.weekly frequency set" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v1.weekly retention set" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v1.monthly frequency set" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v1.monthly retention set" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v1.yearly frequency set" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v1.yearly retention set" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/Name-v2" executed="True" result="Success" success="True" time="0.5347" asserts="0" description="Parameter/Name-v2">
                <results>
                  <test-case description="should filter on SLA name" name="Public/Get-RubrikSLA.Parameter/Name-v2.should filter on SLA name" time="0.0261" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly frequency exists" name="Public/Get-RubrikSLA.Parameter/Name-v2.hourly frequency exists" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v2.hourly frequency set" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v2.hourly retention set" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily frequency exists" name="Public/Get-RubrikSLA.Parameter/Name-v2.daily frequency exists" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v2.daily frequency set" time="0.0202" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily retention set" name="Public/Get-RubrikSLA.Parameter/Name-v2.daily retention set" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly frequency exists" name="Public/Get-RubrikSLA.Parameter/Name-v2.weekly frequency exists" time="0.0273" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v2.weekly frequency set" time="0.0275" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v2.weekly retention set" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly frequency exists" name="Public/Get-RubrikSLA.Parameter/Name-v2.monthly frequency exists" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v2.monthly frequency set" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v2.monthly retention set" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly frequency exists" name="Public/Get-RubrikSLA.Parameter/Name-v2.yearly frequency exists" time="0.023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v2.yearly frequency set" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v2.yearly retention set" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0722" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Name cannot be $null" name="Public/Get-RubrikSLA.Parameter Validation.Parameter Name cannot be $null" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Name cannot be empty" name="Public/Get-RubrikSLA.Parameter Validation.Parameter Name cannot be empty" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be $null" name="Public/Get-RubrikSLA.Parameter Validation.Parameter ID cannot be $null" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Get-RubrikSLA.Parameter Validation.Parameter ID cannot be empty" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters ID and Name cannot be simultaneously used" name="Public/Get-RubrikSLA.Parameter Validation.Parameters ID and Name cannot be simultaneously used" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikVM.Tests.ps1" executed="True" result="Success" success="True" time="0.5128" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikVM" executed="True" result="Success" success="True" time="0.2514" asserts="0" description="Public/Get-RubrikVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.1164" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="should overwrite $SLAID" name="Public/Get-RubrikVM.Parameter/SLA.should overwrite $SLAID" time="0.0606" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/SLAID" executed="True" result="Success" success="True" time="0.0599" asserts="0" description="Parameter/SLAID">
                <results>
                  <test-case description="should not overwrite $SLAID" name="Public/Get-RubrikVM.Parameter/SLAID.should not overwrite $SLAID" time="0.0243" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0526" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Name cannot be $null" name="Public/Get-RubrikVM.Parameter Validation.Parameter Name cannot be $null" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Name cannot be empty" name="Public/Get-RubrikVM.Parameter Validation.Parameter Name cannot be empty" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be $null" name="Public/Get-RubrikVM.Parameter Validation.Parameter ID cannot be $null" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Get-RubrikVM.Parameter Validation.Parameter ID cannot be empty" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters Id and Name cannot be simultaneously used" name="Public/Get-RubrikVM.Parameter Validation.Parameters Id and Name cannot be simultaneously used" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikVMwareDatastore.Tests.ps1" executed="True" result="Success" success="True" time="0.4805" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikVMwareDatastore.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikVMwareDatastore" executed="True" result="Success" success="True" time="0.2096" asserts="0" description="Public/Get-RubrikVMwareDatastore">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.1878" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 4" name="Public/Get-RubrikVMwareDatastore.Results Filtering.Should Return count of 4" time="0.0322" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return datastore03" name="Public/Get-RubrikVMwareDatastore.Results Filtering.Should Return datastore03" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return Datastore:::22222" name="Public/Get-RubrikVMwareDatastore.Results Filtering.Should Return Datastore:::22222" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return count of 2 " name="Public/Get-RubrikVMwareDatastore.Results Filtering.Should return count of 2 " time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return count of 0 " name="Public/Get-RubrikVMwareDatastore.Results Filtering.Should return count of 0 " time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikVMwareHost.Tests.ps1" executed="True" result="Success" success="True" time="0.4707" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikVMwareHost.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikVMwareHost" executed="True" result="Success" success="True" time="0.1735" asserts="0" description="Public/Get-RubrikVMwareHost">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.1576" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 2" name="Public/Get-RubrikVMwareHost.Results Filtering.Should Return count of 2" time="0.0297" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return esxi01.domain.local" name="Public/Get-RubrikVMwareHost.Results Filtering.Should Return esxi01.domain.local" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return VMwareHost:::44444" name="Public/Get-RubrikVMwareHost.Results Filtering.Should Return VMwareHost:::44444" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return count of 4 " name="Public/Get-RubrikVMwareHost.Results Filtering.Should return count of 4 " time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikVolumeGroup.Tests.ps1" executed="True" result="Success" success="True" time="0.4865" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikVolumeGroup.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikVolumeGroup" executed="True" result="Success" success="True" time="0.2391" asserts="0" description="Public/Get-RubrikVolumeGroup">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.2234" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Requesting all should return count of 4" name="Public/Get-RubrikVolumeGroup.Results Filtering.Requesting all should return count of 4" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Requesting name of VG04 should return id of VolumeGroup:::44444" name="Public/Get-RubrikVolumeGroup.Results Filtering.Requesting name of VG04 should return id of VolumeGroup:::44444" time="0.0288" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Requesting SLA Gold returns count of 3" name="Public/Get-RubrikVolumeGroup.Results Filtering.Requesting SLA Gold returns count of 3" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing ID Exception" name="Public/Get-RubrikVolumeGroup.Results Filtering.Missing ID Exception" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing Name Exception" name="Public/Get-RubrikVolumeGroup.Results Filtering.Missing Name Exception" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikVolumeGroupMount.Tests.ps1" executed="True" result="Success" success="True" time="0.38" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikVolumeGroupMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikVolumeGroupMount" executed="True" result="Success" success="True" time="0.1101" asserts="0" description="Public/Get-RubrikVolumeGroupMount">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.0873" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Requesting all should return count of 4" name="Public/Get-RubrikVolumeGroupMount.Results Filtering.Requesting all should return count of 4" time="0.031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing ID Exception" name="Public/Get-RubrikVolumeGroupMount.Results Filtering.Missing ID Exception" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing Source Host Exception" name="Public/Get-RubrikVolumeGroupMount.Results Filtering.Missing Source Host Exception" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Move-RubrikMountVMDK.Tests.ps1" executed="True" result="Success" success="True" time="0.4494" asserts="0" description="C:\projects\powershell-module\tests\Move-RubrikMountVMDK.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Move-RubrikMountVMDK" executed="True" result="Success" success="True" time="0.1563" asserts="0" description="Public/Move-RubrikMountVMDK">
            <results>
              <test-suite type="TestFixture" name="Parameter/Date" executed="True" result="Success" success="True" time="0.1056" asserts="0" description="Parameter/Date">
                <results>
                  <test-case description="Should detect invalid date" name="Public/Move-RubrikMountVMDK.Parameter/Date.Should detect invalid date" time="0.059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0303" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameters SourceVM and Cleanup cannot be simultaneously used" name="Public/Move-RubrikMountVMDK.Parameter Validation.Parameters SourceVM and Cleanup cannot be simultaneously used" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters TargetVM and Cleanup cannot be simultaneously used" name="Public/Move-RubrikMountVMDK.Parameter Validation.Parameters TargetVM and Cleanup cannot be simultaneously used" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikAPIToken.Tests.ps1" executed="True" result="Success" success="True" time="0.3446" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikAPIToken.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikAPIToken" executed="True" result="Success" success="True" time="0.0803" asserts="0" description="Public/New-RubrikAPIToken">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0558" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Expiration cannot be $null" name="Public/New-RubrikAPIToken.Parameter Validation.Parameter Expiration cannot be $null" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Expiration cannot be empty" name="Public/New-RubrikAPIToken.Parameter Validation.Parameter Expiration cannot be empty" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter OrganizationId cannot be $null" name="Public/New-RubrikAPIToken.Parameter Validation.Parameter OrganizationId cannot be $null" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter OrganizationId cannot be empty" name="Public/New-RubrikAPIToken.Parameter Validation.Parameter OrganizationId cannot be empty" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikManagedVolume.Tests.ps1" executed="True" result="Success" success="True" time="0.3992" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikManagedVolume.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikManagedVolume" executed="True" result="Success" success="True" time="0.1383" asserts="0" description="Public/New-RubrikManagedVolume">
            <results>
              <test-suite type="TestFixture" name="Object Creation" executed="True" result="Success" success="True" time="0.1217" asserts="0" description="Object Creation">
                <results>
                  <test-case description="Should newly created managed volume" name="Public/New-RubrikManagedVolume.Object Creation.Should newly created managed volume" time="0.0575" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter name is required" name="Public/New-RubrikManagedVolume.Object Creation.Parameter name is required" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Channels is required" name="Public/New-RubrikManagedVolume.Object Creation.Parameter Channels is required" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ApplicationTag is correct" name="Public/New-RubrikManagedVolume.Object Creation.Parameter ApplicationTag is correct" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikManagedVolumeExport.Tests.ps1" executed="True" result="Success" success="True" time="0.3465" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikManagedVolumeExport.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikManagedVolumeExport" executed="True" result="Success" success="True" time="0.0916" asserts="0" description="Public/New-RubrikManagedVolumeExport">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0742" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Should newly created managed volume with QUEUED status" name="Public/New-RubrikManagedVolumeExport.Parameter Validation.Should newly created managed volume with QUEUED status" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id is missing" name="Public/New-RubrikManagedVolumeExport.Parameter Validation.Parameter id is missing" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id is empty" name="Public/New-RubrikManagedVolumeExport.Parameter Validation.Parameter id is empty" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikSLA.Tests.ps1" executed="True" result="Success" success="True" time="1.1348" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikSLA.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikSLA" executed="True" result="Success" success="True" time="0.8689" asserts="0" description="Public/New-RubrikSLA">
            <results>
              <test-suite type="TestFixture" name="Parameter/Name-v1" executed="True" result="Success" success="True" time="0.37" asserts="0" description="Parameter/Name-v1">
                <results>
                  <test-case description="frequencies array should be populated" name="Public/New-RubrikSLA.Parameter/Name-v1.frequencies array should be populated" time="0.0591" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v1.hourly frequency set" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly retention set" name="Public/New-RubrikSLA.Parameter/Name-v1.hourly retention set" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily frequency set" name="Public/New-RubrikSLA.Parameter/Name-v1.daily frequency set" time="0.0191" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily retention set" name="Public/New-RubrikSLA.Parameter/Name-v1.daily retention set" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v1.weekly frequency set" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly retention set" name="Public/New-RubrikSLA.Parameter/Name-v1.weekly retention set" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v1.monthly frequency set" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly retention set" name="Public/New-RubrikSLA.Parameter/Name-v1.monthly retention set" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v1.yearly frequency set" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly retention set" name="Public/New-RubrikSLA.Parameter/Name-v1.yearly retention set" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/Name-v2" executed="True" result="Success" success="True" time="0.4301" asserts="0" description="Parameter/Name-v2">
                <results>
                  <test-case description="hourly frequency exists" name="Public/New-RubrikSLA.Parameter/Name-v2.hourly frequency exists" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v2.hourly frequency set" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly retention set" name="Public/New-RubrikSLA.Parameter/Name-v2.hourly retention set" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily frequency exists" name="Public/New-RubrikSLA.Parameter/Name-v2.daily frequency exists" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily frequency set" name="Public/New-RubrikSLA.Parameter/Name-v2.daily frequency set" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily retention set" name="Public/New-RubrikSLA.Parameter/Name-v2.daily retention set" time="0.02" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly frequency exists" name="Public/New-RubrikSLA.Parameter/Name-v2.weekly frequency exists" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v2.weekly frequency set" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly retention set" name="Public/New-RubrikSLA.Parameter/Name-v2.weekly retention set" time="0.0191" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly frequency exists" name="Public/New-RubrikSLA.Parameter/Name-v2.monthly frequency exists" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v2.monthly frequency set" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly retention set" name="Public/New-RubrikSLA.Parameter/Name-v2.monthly retention set" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly frequency exists" name="Public/New-RubrikSLA.Parameter/Name-v2.yearly frequency exists" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v2.yearly frequency set" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly retention set" name="Public/New-RubrikSLA.Parameter/Name-v2.yearly retention set" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0481" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Name cannot be $null" name="Public/New-RubrikSLA.Parameter Validation.Parameter Name cannot be $null" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Name cannot be empty" name="Public/New-RubrikSLA.Parameter Validation.Parameter Name cannot be empty" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="SLA Paramters cannot be empty" name="Public/New-RubrikSLA.Parameter Validation.SLA Paramters cannot be empty" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikSnapshot.Tests.ps1" executed="True" result="Success" success="True" time="0.4867" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikSnapshot.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikSnapshot" executed="True" result="Success" success="True" time="0.2268" asserts="0" description="Public/New-RubrikSnapshot">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.2089" asserts="0" description="Parameters">
                <results>
                  <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0656" asserts="0" description="Parameter Validation">
                    <results>
                      <test-case description="Parameter id cannot be $null or empty" name="Public/New-RubrikSnapshot.Parameters.Parameter Validation.Parameter id cannot be $null or empty" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should issue warning" name="Public/New-RubrikSnapshot.Parameters.Parameter Validation.Should issue warning" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-case description="Should Return status of QUEUED" name="Public/New-RubrikSnapshot.Parameters.Should Return status of QUEUED" time="0.069" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikVMDKMount.Tests.ps1" executed="True" result="Success" success="True" time="0.5762" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikVMDKMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikVMDKMount" executed="True" result="Success" success="True" time="0.2397" asserts="0" description="Public/New-RubrikVMDKMount">
            <results>
              <test-suite type="TestFixture" name="Parameter/ID" executed="True" result="Success" success="True" time="0.167" asserts="0" description="Parameter/ID">
                <results>
                  <test-case description="Status should be QUEUED" name="Public/New-RubrikVMDKMount.Parameter/ID.Status should be QUEUED" time="0.0699" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Mount request status should exist" name="Public/New-RubrikVMDKMount.Parameter/ID.Mount request status should exist" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter SnapshotID cannot be $null" name="Public/New-RubrikVMDKMount.Parameter Validation.Parameter SnapshotID cannot be $null" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter SnapshotID cannot be empty" name="Public/New-RubrikVMDKMount.Parameter Validation.Parameter SnapshotID cannot be empty" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter TargetVM cannot be $null" name="Public/New-RubrikVMDKMount.Parameter Validation.Parameter TargetVM cannot be $null" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter TargetVM cannot be empty" name="Public/New-RubrikVMDKMount.Parameter Validation.Parameter TargetVM cannot be empty" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikVolumeGroupMount.Tests.ps1" executed="True" result="Success" success="True" time="0.39" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikVolumeGroupMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikVolumeGroupMount" executed="True" result="Success" success="True" time="0.1369" asserts="0" description="Public/New-RubrikVolumeGroupMount">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.1194" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Should newly created Volume Group Mount task with QUEUED status" name="Public/New-RubrikVolumeGroupMount.Parameter Validation.Should newly created Volume Group Mount task with QUEUED status" time="0.0541" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter TargetHost is missing" name="Public/New-RubrikVolumeGroupMount.Parameter Validation.Parameter TargetHost is missing" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter VolumeGroupSnapshot is missing" name="Public/New-RubrikVolumeGroupMount.Parameter Validation.Parameter VolumeGroupSnapshot is missing" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter TargetHost is empty" name="Public/New-RubrikVolumeGroupMount.Parameter Validation.Parameter TargetHost is empty" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Protect-RubrikHyperVVM.Tests.ps1" executed="True" result="Success" success="True" time="0.5779" asserts="0" description="C:\projects\powershell-module\tests\Protect-RubrikHyperVVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Protect-RubrikHyperVVM" executed="True" result="Success" success="True" time="0.3204" asserts="0" description="Public/Protect-RubrikHyperVVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.102" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="Should assign SLA" name="Public/Protect-RubrikHyperVVM.Parameter/SLA.Should assign SLA" time="0.0567" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/DoNotProtect" executed="True" result="Success" success="True" time="0.0666" asserts="0" description="Parameter/DoNotProtect">
                <results>
                  <test-case description="Should be Unprotected" name="Public/Protect-RubrikHyperVVM.Parameter/DoNotProtect.Should be Unprotected" time="0.0264" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/Inherit" executed="True" result="Success" success="True" time="0.0746" asserts="0" description="Parameter/Inherit">
                <results>
                  <test-case description="Should be Inherited" name="Public/Protect-RubrikHyperVVM.Parameter/Inherit.Should be Inherited" time="0.0228" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0497" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Protect-RubrikHyperVVM.Parameter Validation.Parameter ID cannot be $null" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Protect-RubrikHyperVVM.Parameter Validation.Parameter ID cannot be empty" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and DoNotProtect cannot be simultaneously used" name="Public/Protect-RubrikHyperVVM.Parameter Validation.Parameters SLA and DoNotProtect cannot be simultaneously used" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and Inherit cannot be simultaneously used" name="Public/Protect-RubrikHyperVVM.Parameter Validation.Parameters SLA and Inherit cannot be simultaneously used" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters DoNotProtect and Inherit cannot be simultaneously used" name="Public/Protect-RubrikHyperVVM.Parameter Validation.Parameters DoNotProtect and Inherit cannot be simultaneously used" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Protect-RubrikNutanixVM.Tests.ps1" executed="True" result="Success" success="True" time="0.5563" asserts="0" description="C:\projects\powershell-module\tests\Protect-RubrikNutanixVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Protect-RubrikNutanixVM" executed="True" result="Success" success="True" time="0.299" asserts="0" description="Public/Protect-RubrikNutanixVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.0808" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="Should assign SLA" name="Public/Protect-RubrikNutanixVM.Parameter/SLA.Should assign SLA" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/DoNotProtect" executed="True" result="Success" success="True" time="0.0676" asserts="0" description="Parameter/DoNotProtect">
                <results>
                  <test-case description="Should be Unprotected" name="Public/Protect-RubrikNutanixVM.Parameter/DoNotProtect.Should be Unprotected" time="0.0239" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/Inherit" executed="True" result="Success" success="True" time="0.0681" asserts="0" description="Parameter/Inherit">
                <results>
                  <test-case description="Should be Inherited" name="Public/Protect-RubrikNutanixVM.Parameter/Inherit.Should be Inherited" time="0.0206" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0577" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Protect-RubrikNutanixVM.Parameter Validation.Parameter ID cannot be $null" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Protect-RubrikNutanixVM.Parameter Validation.Parameter ID cannot be empty" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and DoNotProtect cannot be simultaneously used" name="Public/Protect-RubrikNutanixVM.Parameter Validation.Parameters SLA and DoNotProtect cannot be simultaneously used" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and Inherit cannot be simultaneously used" name="Public/Protect-RubrikNutanixVM.Parameter Validation.Parameters SLA and Inherit cannot be simultaneously used" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters DoNotProtect and Inherit cannot be simultaneously used" name="Public/Protect-RubrikNutanixVM.Parameter Validation.Parameters DoNotProtect and Inherit cannot be simultaneously used" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Protect-RubrikTag.Tests.ps1" executed="True" result="Success" success="True" time="0.3379" asserts="0" description="C:\projects\powershell-module\tests\Protect-RubrikTag.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Protect-RubrikTag" executed="True" result="Success" success="True" time="0.0768" asserts="0" description="Public/Protect-RubrikTag">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0616" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Tag is mandatory" name="Public/Protect-RubrikTag.Parameter Validation.Parameter Tag is mandatory" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Category is mandatory" name="Public/Protect-RubrikTag.Parameter Validation.Parameter Category is mandatory" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Tag is null or empty" name="Public/Protect-RubrikTag.Parameter Validation.Parameter Tag is null or empty" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Category is null or empty" name="Public/Protect-RubrikTag.Parameter Validation.Parameter Category is null or empty" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Protect-RubrikVM.Tests.ps1" executed="True" result="Success" success="True" time="0.5399" asserts="0" description="C:\projects\powershell-module\tests\Protect-RubrikVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Protect-RubrikVM" executed="True" result="Success" success="True" time="0.2823" asserts="0" description="Public/Protect-RubrikVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.0802" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="Should assign SLA" name="Public/Protect-RubrikVM.Parameter/SLA.Should assign SLA" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/DoNotProtect" executed="True" result="Success" success="True" time="0.064" asserts="0" description="Parameter/DoNotProtect">
                <results>
                  <test-case description="Should be Unprotected" name="Public/Protect-RubrikVM.Parameter/DoNotProtect.Should be Unprotected" time="0.0235" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/Inherit" executed="True" result="Success" success="True" time="0.0631" asserts="0" description="Parameter/Inherit">
                <results>
                  <test-case description="Should be Inherited" name="Public/Protect-RubrikVM.Parameter/Inherit.Should be Inherited" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0497" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Protect-RubrikVM.Parameter Validation.Parameter ID cannot be $null" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Protect-RubrikVM.Parameter Validation.Parameter ID cannot be empty" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and DoNotProtect cannot be simultaneously used" name="Public/Protect-RubrikVM.Parameter Validation.Parameters SLA and DoNotProtect cannot be simultaneously used" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and Inherit cannot be simultaneously used" name="Public/Protect-RubrikVM.Parameter Validation.Parameters SLA and Inherit cannot be simultaneously used" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters DoNotProtect and Inherit cannot be simultaneously used" name="Public/Protect-RubrikVM.Parameter Validation.Parameters DoNotProtect and Inherit cannot be simultaneously used" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikAPIToken.Tests.ps1" executed="True" result="Success" success="True" time="0.3064" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikAPIToken.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikAPIToken" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Public/Remove-RubrikAPIToken">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0305" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter TokenId cannot be $null" name="Public/Remove-RubrikAPIToken.Parameter Validation.Parameter TokenId cannot be $null" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter TokenId cannot be empty" name="Public/Remove-RubrikAPIToken.Parameter Validation.Parameter TokenId cannot be empty" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikManagedVolume.Tests.ps1" executed="True" result="Success" success="True" time="0.4425" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikManagedVolume.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikManagedVolume" executed="True" result="Success" success="True" time="0.0974" asserts="0" description="Public/Remove-RubrikManagedVolume">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0822" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter id cannot be $null" name="Public/Remove-RubrikManagedVolume.Parameter Validation.Parameter id cannot be $null" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id cannot be empty" name="Public/Remove-RubrikManagedVolume.Parameter Validation.Parameter id cannot be empty" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikManagedVolumeExport.Tests.ps1" executed="True" result="Success" success="True" time="0.34" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikManagedVolumeExport.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikManagedVolumeExport" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Public/Remove-RubrikManagedVolumeExport">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0279" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter id cannot be $null" name="Public/Remove-RubrikManagedVolumeExport.Parameter Validation.Parameter id cannot be $null" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id cannot be empty" name="Public/Remove-RubrikManagedVolumeExport.Parameter Validation.Parameter id cannot be empty" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikSLA.Tests.ps1" executed="True" result="Success" success="True" time="0.4585" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikSLA.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikSLA" executed="True" result="Success" success="True" time="0.2049" asserts="0" description="Public/Remove-RubrikSLA">
            <results>
              <test-suite type="TestFixture" name="Parameter/ID-v1" executed="True" result="Success" success="True" time="0.0884" asserts="0" description="Parameter/ID-v1">
                <results>
                  <test-case description="Should Return status of Success" name="Public/Remove-RubrikSLA.Parameter/ID-v1.Should Return status of Success" time="0.0285" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return HTTP status code 204" name="Public/Remove-RubrikSLA.Parameter/ID-v1.Should Return HTTP status code 204" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/ID-v2" executed="True" result="Success" success="True" time="0.0756" asserts="0" description="Parameter/ID-v2">
                <results>
                  <test-case description="Should Return status of Success" name="Public/Remove-RubrikSLA.Parameter/ID-v2.Should Return status of Success" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return HTTP status code 204" name="Public/Remove-RubrikSLA.Parameter/ID-v2.Should Return HTTP status code 204" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0193" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null or empty" name="Public/Remove-RubrikSLA.Parameter Validation.Parameter ID cannot be $null or empty" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikVMSnapshot.Tests.ps1" executed="True" result="Success" success="True" time="0.3852" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikVMSnapshot.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikVMSnapshot" executed="True" result="Success" success="True" time="0.1287" asserts="0" description="Public/Remove-RubrikVMSnapshot">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.1134" asserts="0" description="Parameters">
                <results>
                  <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0252" asserts="0" description="Parameter Validation">
                    <results>
                      <test-case description="Parameter id cannot be $null or empty" name="Public/Remove-RubrikVMSnapshot.Parameters.Parameter Validation.Parameter id cannot be $null or empty" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-case description="Should Return status of Success" name="Public/Remove-RubrikVMSnapshot.Parameters.Should Return status of Success" time="0.0278" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return HTTP status code 204" name="Public/Remove-RubrikVMSnapshot.Parameters.Should Return HTTP status code 204" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikVolumeGroupMount.Tests.ps1" executed="True" result="Success" success="True" time="0.3003" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikVolumeGroupMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikVolumeGroupMount" executed="True" result="Success" success="True" time="0.0496" asserts="0" description="Public/Remove-RubrikVolumeGroupMount">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.032" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter id cannot be $null" name="Public/Remove-RubrikVolumeGroupMount.Parameter Validation.Parameter id cannot be $null" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id cannot be empty" name="Public/Remove-RubrikVolumeGroupMount.Parameter Validation.Parameter id cannot be empty" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikHyperVVM.Tests.ps1" executed="True" result="Success" success="True" time="0.3219" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikHyperVVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikHyperVVM" executed="True" result="Success" success="True" time="0.0504" asserts="0" description="Public/Set-RubrikHyperVVM">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0317" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Set-RubrikHyperVVM.Parameter Validation.Parameter ID cannot be $null" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Set-RubrikHyperVVM.Parameter Validation.Parameter ID cannot be empty" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikManagedVolume.Tests.ps1" executed="True" result="Success" success="True" time="0.4106" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikManagedVolume.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikManagedVolume" executed="True" result="Success" success="True" time="0.1635" asserts="0" description="Public/Set-RubrikManagedVolume">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.1431" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Request Fulfilled VolumeSize" name="Public/Set-RubrikManagedVolume.Parameter Validation.Request Fulfilled VolumeSize" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Request Fulfilled SLA" name="Public/Set-RubrikManagedVolume.Parameter Validation.Request Fulfilled SLA" time="0.0248" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be $null" name="Public/Set-RubrikManagedVolume.Parameter Validation.Parameter ID cannot be $null" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Set-RubrikManagedVolume.Parameter Validation.Parameter ID cannot be empty" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Volume Size is integer" name="Public/Set-RubrikManagedVolume.Parameter Validation.Volume Size is integer" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikNutanixVM.Tests.ps1" executed="True" result="Success" success="True" time="0.4448" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikNutanixVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikNutanixVM" executed="True" result="Success" success="True" time="0.1961" asserts="0" description="Public/Set-RubrikNutanixVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/PauseBackups" executed="True" result="Success" success="True" time="0.0783" asserts="0" description="Parameter/PauseBackups">
                <results>
                  <test-case description="Should set PauseBackups" name="Public/Set-RubrikNutanixVM.Parameter/PauseBackups.Should set PauseBackups" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/SnapConsistency" executed="True" result="Success" success="True" time="0.0534" asserts="0" description="Parameter/SnapConsistency">
                <results>
                  <test-case description="Should set SnapConsistency" name="Public/Set-RubrikNutanixVM.Parameter/SnapConsistency.Should set SnapConsistency" time="0.0205" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Set-RubrikNutanixVM.Parameter Validation.Parameter ID cannot be $null" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Set-RubrikNutanixVM.Parameter Validation.Parameter ID cannot be empty" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter SnapConsistency must have a valid value" name="Public/Set-RubrikNutanixVM.Parameter Validation.Parameter SnapConsistency must have a valid value" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikVM.Tests.ps1" executed="True" result="Success" success="True" time="0.4639" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikVM" executed="True" result="Success" success="True" time="0.201" asserts="0" description="Public/Set-RubrikVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/PauseBackups" executed="True" result="Success" success="True" time="0.0824" asserts="0" description="Parameter/PauseBackups">
                <results>
                  <test-case description="Should set PauseBackups" name="Public/Set-RubrikVM.Parameter/PauseBackups.Should set PauseBackups" time="0.0487" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/SnapConsistency" executed="True" result="Success" success="True" time="0.051" asserts="0" description="Parameter/SnapConsistency">
                <results>
                  <test-case description="Should set SnapConsistency" name="Public/Set-RubrikVM.Parameter/SnapConsistency.Should set SnapConsistency" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Set-RubrikVM.Parameter Validation.Parameter ID cannot be $null" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Set-RubrikVM.Parameter Validation.Parameter ID cannot be empty" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter SnapConsistency must have a valid value" name="Public/Set-RubrikVM.Parameter Validation.Parameter SnapConsistency must have a valid value" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter MaxNestedSnapshots must have a valid value" name="Public/Set-RubrikVM.Parameter Validation.Parameter MaxNestedSnapshots must have a valid value" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Start-RubrikManagedVolumeSnapshot.Tests.ps1" executed="True" result="Success" success="True" time="0.3431" asserts="0" description="C:\projects\powershell-module\tests\Start-RubrikManagedVolumeSnapshot.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Start-RubrikManagedVolumeSnapshot" executed="True" result="Success" success="True" time="0.0853" asserts="0" description="Public/Start-RubrikManagedVolumeSnapshot">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0687" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Request Fulfilled" name="Public/Start-RubrikManagedVolumeSnapshot.Parameter Validation.Request Fulfilled" time="0.0228" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID must be present" name="Public/Start-RubrikManagedVolumeSnapshot.Parameter Validation.Parameter ID must be present" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Stop-RubrikManagedVolumeSnapshot.Tests.ps1" executed="True" result="Success" success="True" time="0.3553" asserts="0" description="C:\projects\powershell-module\tests\Stop-RubrikManagedVolumeSnapshot.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Stop-RubrikManagedVolumeSnapshot" executed="True" result="Success" success="True" time="0.0989" asserts="0" description="Public/Stop-RubrikManagedVolumeSnapshot">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0835" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Request Fulfilled" name="Public/Stop-RubrikManagedVolumeSnapshot.Parameter Validation.Request Fulfilled" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID must be present" name="Public/Stop-RubrikManagedVolumeSnapshot.Parameter Validation.Parameter ID must be present" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Submit-Request.Tests.ps1" executed="True" result="Success" success="True" time="2.4044" asserts="0" description="C:\projects\powershell-module\tests\Submit-Request.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Private/Submit-Request" executed="True" result="Success" success="True" time="2.1518" asserts="0" description="Private/Submit-Request">
            <results>
              <test-suite type="TestFixture" name="Method:Delete-Success/Error" executed="True" result="Success" success="True" time="0.1257" asserts="0" description="Method:Delete-Success/Error">
                <results>
                  <test-case description="Status:Success" name="Private/Submit-Request.Method:Delete-Success/Error.Status:Success" time="0.0611" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Status:Error" name="Private/Submit-Request.Method:Delete-Success/Error.Status:Error" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Method:Other-EventObject" executed="True" result="Success" success="True" time="0.4732" asserts="0" description="Method:Other-EventObject">
                <results>
                  <test-suite type="ParameterizedTest" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify &lt;Property&gt; Property" executed="True" result="Success" success="True" time="0.3366" asserts="0" description="Parse as PowerShell - Event Objects - Verify &lt;Property&gt; Property">
                    <results>
                      <test-case description="Parse as PowerShell - Event Objects - Verify id Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify id Property" time="0.0571" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify objectId Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify objectId Property" time="0.0302" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify objectType Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify objectType Property" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify objectName Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify objectName Property" time="0.0261" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify eventInfo Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify eventInfo Property" time="0.0285" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify time Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify time Property" time="0.0286" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify eventType Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify eventType Property" time="0.0281" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify eventStatus Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify eventStatus Property" time="0.0283" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify eventSeriesId Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify eventSeriesId Property" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify relatedIds Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify relatedIds Property" time="0.0289" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify jobInstanceId Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify jobInstanceId Property" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Method:Other-SLAObject" executed="True" result="Success" success="True" time="1.4673" asserts="0" description="Method:Other-SLAObject">
                <results>
                  <test-suite type="ParameterizedTest" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify &lt;Property&gt; Property" executed="True" result="Success" success="True" time="1.0162" asserts="0" description="Parse as PowerShell - SLA Object - Verify &lt;Property&gt; Property">
                    <results>
                      <test-case description="Parse as PowerShell - SLA Object - Verify id Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify id Property" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify primaryClusterId Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify primaryClusterId Property" time="0.0322" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify name Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify name Property" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify polarisManagedId Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify polarisManagedId Property" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify frequencies Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify frequencies Property" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify allowedBackupWindows Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify allowedBackupWindows Property" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify firstFullAllowedBackupWindows Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify firstFullAllowedBackupWindows Property" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify maxLocalRetentionLimit Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify maxLocalRetentionLimit Property" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify archivalSpecs Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify archivalSpecs Property" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify replicationSpecs Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify replicationSpecs Property" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numDbs Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numDbs Property" time="0.0294" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numOracleDbs Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numOracleDbs Property" time="0.0298" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numFilesets Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numFilesets Property" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numHypervVms Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numHypervVms Property" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numNutanixVms Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numNutanixVms Property" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numManagedVolumes Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numManagedVolumes Property" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numStorageArrayVolumeGroups Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numStorageArrayVolumeGroups Property" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numWindowsVolumeGroups Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numWindowsVolumeGroups Property" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numLinuxHosts Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numLinuxHosts Property" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numShares Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numShares Property" time="0.0636" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numWindowsHosts Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numWindowsHosts Property" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numVms Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numVms Property" time="0.035" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numEc2Instances Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numEc2Instances Property" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numVcdVapps Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numVcdVapps Property" time="0.0315" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numProtectedObjects Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numProtectedObjects Property" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify isDefault Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify isDefault Property" time="0.05" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify uiColor Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify uiColor Property" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify showAdvancedUi Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify showAdvancedUi Property" time="0.0288" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify advancedUiConfig Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify advancedUiConfig Property" time="0.0293" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Error:Route not defined" executed="True" result="Success" success="True" time="0.0595" asserts="0" description="Error:Route not defined">
                <results>
                  <test-case description="Should throw - Route not defined." name="Private/Submit-Request.Error:Route not defined.Should throw - Route not defined." time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Sync-RubrikAnnotation.Tests.ps1" executed="True" result="Success" success="True" time="0.3106" asserts="0" description="C:\projects\powershell-module\tests\Sync-RubrikAnnotation.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Sync-RubrikAnnotation" executed="True" result="Success" success="True" time="0.0467" asserts="0" description="Public/Sync-RubrikAnnotation">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0322" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Name cannot be $null" name="Public/Sync-RubrikAnnotation.Parameter Validation.Parameter Name cannot be $null" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Name cannot be empty" name="Public/Sync-RubrikAnnotation.Parameter Validation.Parameter Name cannot be empty" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Update-RubrikHost.Tests.ps1" executed="True" result="Success" success="True" time="0.396" asserts="0" description="C:\projects\powershell-module\tests\Update-RubrikHost.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Update-RubrikHost" executed="True" result="Success" success="True" time="0.1189" asserts="0" description="Public/Update-RubrikHost">
            <results>
              <test-suite type="TestFixture" name="Request Succeeds" executed="True" result="Success" success="True" time="0.0681" asserts="0" description="Request Succeeds">
                <results>
                  <test-case description="Should return proper hostname" name="Public/Update-RubrikHost.Request Succeeds.Should return proper hostname" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0313" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be null" name="Public/Update-RubrikHost.Parameter Validation.Parameter ID cannot be null" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Update-RubrikHost.Parameter Validation.Parameter ID cannot be empty" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Update-RubrikvCenter.Tests.ps1" executed="True" result="Success" success="True" time="0.38" asserts="0" description="C:\projects\powershell-module\tests\Update-RubrikvCenter.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Update-RubrikvCenter" executed="True" result="Success" success="True" time="0.1131" asserts="0" description="Public/Update-RubrikvCenter">
            <results>
              <test-suite type="TestFixture" name="Request Succeeds" executed="True" result="Success" success="True" time="0.0653" asserts="0" description="Request Succeeds">
                <results>
                  <test-case description="Should return QUEUED status" name="Public/Update-RubrikvCenter.Request Succeeds.Should return QUEUED status" time="0.0246" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0298" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be null" name="Public/Update-RubrikvCenter.Parameter Validation.Parameter ID cannot be null" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Update-RubrikvCenter.Parameter Validation.Parameter ID cannot be empty" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Update-RubrikVMwareVM.Tests.ps1" executed="True" result="Success" success="True" time="0.4649" asserts="0" description="C:\projects\powershell-module\tests\Update-RubrikVMwareVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Update-RubrikVMwareVM" executed="True" result="Success" success="True" time="0.2044" asserts="0" description="Public/Update-RubrikVMwareVM">
            <results>
              <test-suite type="TestFixture" name="Request Fails" executed="True" result="Success" success="True" time="0.0645" asserts="0" description="Request Fails">
                <results>
                  <test-case description="Invalid vCenter id" name="Public/Update-RubrikVMwareVM.Request Fails.Invalid vCenter id" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Request Succeeds" executed="True" result="Success" success="True" time="0.1172" asserts="0" description="Request Succeeds">
                <results>
                  <test-case description="Get-TestVM should return id / vmmoid" name="Public/Update-RubrikVMwareVM.Request Succeeds.Get-TestVM should return id / vmmoid" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Valid execution based on Get-TestVM" name="Public/Update-RubrikVMwareVM.Request Succeeds.Valid execution based on Get-TestVM" time="0.0254" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>