<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="677" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2019-09-23" time="18:54:22">
  <environment clr-version="4.0.30319.42000" user-domain="APPVYR-WIN" cwd="C:\projects\powershell-module" platform="Microsoft Windows Server 2012 R2 Datacenter|C:\windows|\Device\Harddisk0\Partition5" machine-name="APPVYR-WIN" nunit-version="2.5.8.0" os-version="6.3.9600" user="appveyor" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="57.1153" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Convert-APIDateTime.Tests.ps1" executed="True" result="Success" success="True" time="1.1109" asserts="0" description="C:\projects\powershell-module\tests\Convert-APIDateTime.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Private/Convert-APIDateTime" executed="True" result="Success" success="True" time="0.5576" asserts="0" description="Private/Convert-APIDateTime">
            <results>
              <test-suite type="TestFixture" name="Convert different date time objects" executed="True" result="Success" success="True" time="0.3676" asserts="0" description="Convert different date time objects">
                <results>
                  <test-suite type="ParameterizedTest" name="Private/Convert-APIDateTime.Convert different date time objects.Get-RubrikAPIData - &lt;DateTimeString&gt; test" executed="True" result="Success" success="True" time="0.1241" asserts="0" description="Get-RubrikAPIData - &lt;DateTimeString&gt; test">
                    <results>
                      <test-case description="Get-RubrikAPIData - Mon Jan 10 17:12:14 UTC 2019 test" name="Private/Convert-APIDateTime.Convert different date time objects.Get-RubrikAPIData - Mon Jan 10 17:12:14 UTC 2019 test" time="0.1115" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Mon Mar 11 09:12:14 UTC 2017 test" name="Private/Convert-APIDateTime.Convert different date time objects.Get-RubrikAPIData - Mon Mar 11 09:12:14 UTC 2017 test" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Mon Sep 12 23:12:14 UTC 2018 test" name="Private/Convert-APIDateTime.Convert different date time objects.Get-RubrikAPIData - Mon Sep 12 23:12:14 UTC 2018 test" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Mon Dec 13 14:12:14 UTC 2006 test" name="Private/Convert-APIDateTime.Convert different date time objects.Get-RubrikAPIData - Mon Dec 13 14:12:14 UTC 2006 test" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Error handling" executed="True" result="Success" success="True" time="0.089" asserts="0" description="Error handling">
                <results>
                  <test-case description="February 30 - Should not have output" name="Private/Convert-APIDateTime.Error handling.February 30 - Should not have output" time="0.0282" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Movember - Should not have output" name="Private/Convert-APIDateTime.Error handling.Movember - Should not have output" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="25th hour - Should not have output" name="Private/Convert-APIDateTime.Error handling.25th hour - Should not have output" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Export-RubrikDatabase.Tests.ps1" executed="True" result="Success" success="True" time="1.2094" asserts="0" description="C:\projects\powershell-module\tests\Export-RubrikDatabase.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Export-RubrikDatabase" executed="True" result="Success" success="True" time="0.9163" asserts="0" description="Public/Export-RubrikDatabase">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.8937" asserts="0" description="Parameters">
                <results>
                  <test-suite type="TestFixture" name="Command Execution" executed="True" result="Success" success="True" time="0.416" asserts="0" description="Command Execution">
                    <results>
                      <test-case description="Should return status of queued" name="Public/Export-RubrikDatabase.Parameters.Command Execution.Should return status of queued" time="0.3665" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.1211" asserts="0" description="Parameter Validation">
                    <results>
                      <test-case description="Parameter id must be specified" name="Public/Export-RubrikDatabase.Parameters.Parameter Validation.Parameter id must be specified" time="0.056" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parameter id cannot be $null or empty" name="Public/Export-RubrikDatabase.Parameters.Parameter Validation.Parameter id cannot be $null or empty" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parameter set cannot be resolved." name="Public/Export-RubrikDatabase.Parameters.Parameter Validation.Parameter set cannot be resolved." time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="RecoveryDateTime must be a date." name="Public/Export-RubrikDatabase.Parameters.Parameter Validation.RecoveryDateTime must be a date." time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Export-RubrikReport.Tests.ps1" executed="True" result="Success" success="True" time="0.5061" asserts="0" description="C:\projects\powershell-module\tests\Export-RubrikReport.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Export-RubrikReport" executed="True" result="Success" success="True" time="0.1866" asserts="0" description="Public/Export-RubrikReport">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.1677" asserts="0" description="Parameters">
                <results>
                  <test-suite type="TestFixture" name="Report Filtering" executed="True" result="Success" success="True" time="0.0801" asserts="0" description="Report Filtering">
                    <results>
                      <test-case description="Should return url for report" name="Public/Export-RubrikReport.Parameters.Report Filtering.Should return url for report" time="0.0619" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Parameter Validation">
                    <results>
                      <test-case description="Parameter id must be specified" name="Public/Export-RubrikReport.Parameters.Parameter Validation.Parameter id must be specified" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parameter id cannot be $null or empty" name="Public/Export-RubrikReport.Parameters.Parameter Validation.Parameter id cannot be $null or empty" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Export-RubrikVM.Tests.ps1" executed="True" result="Success" success="True" time="0.5584" asserts="0" description="C:\projects\powershell-module\tests\Export-RubrikVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Export-RubrikVM" executed="True" result="Success" success="True" time="0.2697" asserts="0" description="Public/Export-RubrikVM">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.2499" asserts="0" description="Parameters">
                <results>
                  <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0542" asserts="0" description="Parameter Validation">
                    <results>
                      <test-case description="Parameter id cannot be $null or empty" name="Public/Export-RubrikVM.Parameters.Parameter Validation.Parameter id cannot be $null or empty" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parameter DatastoreId cannot be $null or empty" name="Public/Export-RubrikVM.Parameters.Parameter Validation.Parameter DatastoreId cannot be $null or empty" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-case description="Should Return status of QUEUED" name="Public/Export-RubrikVM.Parameters.Should Return status of QUEUED" time="0.0857" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikAPIData.Tests.ps1" executed="True" result="Success" success="True" time="3.5173" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikAPIData.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Private/Get-RubrikAPIData" executed="True" result="Success" success="True" time="3.1632" asserts="0" description="Private/Get-RubrikAPIData">
            <results>
              <test-suite type="TestFixture" name="Function specific tests" executed="True" result="Success" success="True" time="3.0486" asserts="0" description="Function specific tests">
                <results>
                  <test-suite type="ParameterizedTest" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - &lt;f&gt; test" executed="True" result="Success" success="True" time="2.0035" asserts="0" description="Get-RubrikAPIData - &lt;f&gt; test">
                    <results>
                      <test-case description="Get-RubrikAPIData - Connect-Rubrik test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Connect-Rubrik test" time="0.0487" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Disconnect-Rubrik test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Disconnect-Rubrik test" time="0.0189" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Export-RubrikDatabase test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Export-RubrikDatabase test" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Export-RubrikReport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Export-RubrikReport test" time="0.0239" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Export-RubrikVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Export-RubrikVM test" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikAPIToken test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikAPIToken test" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikAPIVersion test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikAPIVersion test" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikAvailabilityGroup test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikAvailabilityGroup test" time="0.0225" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikBootStrap test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikBootStrap test" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikDatabase test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikDatabase test" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikDatabaseFiles test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikDatabaseFiles test" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikDatabaseMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikDatabaseMount test" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikDatabaseRecoverableRange test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikDatabaseRecoverableRange test" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikEvent test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikEvent test" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikFileset test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikFileset test" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikFilesetTemplate test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikFilesetTemplate test" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikHost test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikHost test" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikHyperVVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikHyperVVM test" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikLDAP test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikLDAP test" time="0.086" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikLogShipping test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikLogShipping test" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikManagedVolume test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikManagedVolume test" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikManagedVolumeExport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikManagedVolumeExport test" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikMount test" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikNASShare test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikNASShare test" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikNutanixVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikNutanixVM test" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikOracleDB test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikOracleDB test" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikOrganization test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikOrganization test" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikReport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikReport test" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikReportData test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikReportData test" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikRequest test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikRequest test" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikSetting test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikSetting test" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikSLA test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikSLA test" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikSnapshot test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikSnapshot test" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikSoftwareVersion test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikSoftwareVersion test" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikSQLInstance test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikSQLInstance test" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikSupportTunnel test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikSupportTunnel test" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikUnmanagedObject test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikUnmanagedObject test" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikUser test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikUser test" time="0.0205" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVCenter test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVCenter test" time="0.0243" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVersion test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVersion test" time="0.0277" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVM test" time="0.0204" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVMSnapshot test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVMSnapshot test" time="0.0505" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVMwareDatastore test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVMwareDatastore test" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVMwareHost test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVMwareHost test" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVolumeGroup test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVolumeGroup test" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Get-RubrikVolumeGroupMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Get-RubrikVolumeGroupMount test" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikAPIToken test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikAPIToken test" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikBootStrap test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikBootStrap test" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikDatabaseMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikDatabaseMount test" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikFileset test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikFileset test" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikFilesetTemplate test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikFilesetTemplate test" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikHost test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikHost test" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikLDAP test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikLDAP test" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikLogBackup test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikLogBackup test" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikLogShipping test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikLogShipping test" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikManagedVolume test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikManagedVolume test" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikManagedVolumeExport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikManagedVolumeExport test" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikMount test" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikNASShare test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikNASShare test" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikReport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikReport test" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikSLA test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikSLA test" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikSnapshot test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikSnapshot test" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikUser test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikUser test" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikVCenter test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikVCenter test" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikVMDKMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikVMDKMount test" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - New-RubrikVolumeGroupMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - New-RubrikVolumeGroupMount test" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Protect-RubrikDatabase test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Protect-RubrikDatabase test" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Protect-RubrikFileset test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Protect-RubrikFileset test" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Protect-RubrikHyperVVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Protect-RubrikHyperVVM test" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Protect-RubrikNutanixVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Protect-RubrikNutanixVM test" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Protect-RubrikTag test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Protect-RubrikTag test" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Protect-RubrikVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Protect-RubrikVM test" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Register-RubrikBackupService test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Register-RubrikBackupService test" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikAPIToken test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikAPIToken test" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikDatabaseMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikDatabaseMount test" time="0.0207" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikFileset test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikFileset test" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikHost test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikHost test" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikLogShipping test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikLogShipping test" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikManagedVolume test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikManagedVolume test" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikManagedVolumeExport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikManagedVolumeExport test" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikMount test" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikNASShare test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikNASShare test" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikReport test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikReport test" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikSLA test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikSLA test" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikUnmanagedObject test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikUnmanagedObject test" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikUser test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikUser test" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikVCenter test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikVCenter test" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikVMSnapshot test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikVMSnapshot test" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Remove-RubrikVolumeGroupMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Remove-RubrikVolumeGroupMount test" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Reset-RubrikLogShipping test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Reset-RubrikLogShipping test" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Restore-RubrikDatabase test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Restore-RubrikDatabase test" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikAvailabilityGroup test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikAvailabilityGroup test" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikBlackout test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikBlackout test" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikDatabase test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikDatabase test" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikHyperVVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikHyperVVM test" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikLogShipping test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikLogShipping test" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikManagedVolume test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikManagedVolume test" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikMount test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikMount test" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikNASShare test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikNASShare test" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikNutanixVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikNutanixVM test" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikSetting test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikSetting test" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikSLA test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikSLA test" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikSQLInstance test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikSQLInstance test" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikSupportTunnel test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikSupportTunnel test" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikUser test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikUser test" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikVCenter test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikVCenter test" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikVM test" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Set-RubrikVolumeFilterDriver test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Set-RubrikVolumeFilterDriver test" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Start-RubrikManagedVolumeSnapshot test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Start-RubrikManagedVolumeSnapshot test" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Stop-RubrikManagedVolumeSnapshot test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Stop-RubrikManagedVolumeSnapshot test" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Update-RubrikHost test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Update-RubrikHost test" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Update-RubrikVCenter test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Update-RubrikVCenter test" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Get-RubrikAPIData - Update-RubrikVMwareVM test" name="Private/Get-RubrikAPIData.Function specific tests.Get-RubrikAPIData - Update-RubrikVMwareVM test" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Failure tests, validate incorrect input" executed="True" result="Success" success="True" time="0.055" asserts="0" description="Failure tests, validate incorrect input">
                <results>
                  <test-case description="Get-RubrikAPIData - Incorrect version number, should fail" name="Private/Get-RubrikAPIData.Failure tests, validate incorrect input.Get-RubrikAPIData - Incorrect version number, should fail" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Get-RubrikAPIData - Non-existent function, should fail" name="Private/Get-RubrikAPIData.Failure tests, validate incorrect input.Get-RubrikAPIData - Non-existent function, should fail" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikAPIToken.Tests.ps1" executed="True" result="Success" success="True" time="0.588" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikAPIToken.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikAPIToken" executed="True" result="Success" success="True" time="0.3028" asserts="0" description="Public/Get-RubrikAPIToken">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.2798" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 4" name="Public/Get-RubrikAPIToken.Results Filtering.Should Return count of 4" time="0.0605" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return count of 3" name="Public/Get-RubrikAPIToken.Results Filtering.Should Return count of 3" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return 11111" name="Public/Get-RubrikAPIToken.Results Filtering.Should Return 11111" time="0.0526" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return count of 0 " name="Public/Get-RubrikAPIToken.Results Filtering.Should return count of 0 " time="0.0242" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter UserID cannot be $null" name="Public/Get-RubrikAPIToken.Results Filtering.Parameter UserID cannot be $null" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter UserId cannot be empty" name="Public/Get-RubrikAPIToken.Results Filtering.Parameter UserId cannot be empty" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikAPIVersion.Tests.ps1" executed="True" result="Success" success="True" time="0.3726" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikAPIVersion.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikAPIVersion" executed="True" result="Success" success="True" time="0.0899" asserts="0" description="Public/Get-RubrikAPIVersion">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.07" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should return 1" name="Public/Get-RubrikAPIVersion.Results Filtering.Should return 1" time="0.0281" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Server cannot be null" name="Public/Get-RubrikAPIVersion.Results Filtering.Server cannot be null" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikAvailabilityGroup.Tests.ps1" executed="True" result="Success" success="True" time="0.4461" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikAvailabilityGroup.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikAvailabilityGroup" executed="True" result="Success" success="True" time="0.1512" asserts="0" description="Public/Get-RubrikAvailabilityGroup">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.0772" asserts="0" description="Returned Results">
                <results>
                  <test-case description="No parameters returns all results" name="Public/Get-RubrikAvailabilityGroup.Returned Results.No parameters returns all results" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0523" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="ID Missing" name="Public/Get-RubrikAvailabilityGroup.Parameter Validation.ID Missing" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Name missing" name="Public/Get-RubrikAvailabilityGroup.Parameter Validation.Name missing" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikBootstrap.Tests.ps1" executed="True" result="Success" success="True" time="0.4957" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikBootstrap.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikBootStrap" executed="True" result="Success" success="True" time="0.1992" asserts="0" description="Public/Get-RubrikBootStrap">
            <results>
              <test-suite type="TestFixture" name="Test script logic" executed="True" result="Success" success="True" time="0.1733" asserts="0" description="Test script logic">
                <results>
                  <test-case description="Should run without error - With all values provided" name="Public/Get-RubrikBootStrap.Test script logic.Should run without error - With all values provided" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should run without error - Without -id parameter" name="Public/Get-RubrikBootStrap.Test script logic.Should run without error - Without -id parameter" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should run without error - Without -id &amp; -requestid parameters" name="Public/Get-RubrikBootStrap.Test script logic.Should run without error - Without -id &amp; -requestid parameters" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should prompt for server ip / name" name="Public/Get-RubrikBootStrap.Test script logic.Should prompt for server ip / name" time="0.058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikDatabase.Tests.ps1" executed="True" result="Success" success="True" time="1.069" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikDatabase.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikDatabase" executed="True" result="Success" success="True" time="0.765" asserts="0" description="Public/Get-RubrikDatabase">
            <results>
              <test-suite type="TestFixture" name="Multiple Results" executed="True" result="Success" success="True" time="0.4739" asserts="0" description="Multiple Results">
                <results>
                  <test-case description="runnnig with no parameters should return three results" name="Public/Get-RubrikDatabase.Multiple Results.runnnig with no parameters should return three results" time="0.0688" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="query based on PrimaryClusterID" name="Public/Get-RubrikDatabase.Multiple Results.query based on PrimaryClusterID" time="0.0266" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should filter on Name" name="Public/Get-RubrikDatabase.Multiple Results.should filter on Name" time="0.0281" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should filter on SLA name" name="Public/Get-RubrikDatabase.Multiple Results.should filter on SLA name" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should filter on Instance" name="Public/Get-RubrikDatabase.Multiple Results.should filter on Instance" time="0.0275" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should filter on Hostname" name="Public/Get-RubrikDatabase.Multiple Results.should filter on Hostname" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should filter on ServerInstance" name="Public/Get-RubrikDatabase.Multiple Results.should filter on ServerInstance" time="0.1038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Single Result" executed="True" result="Success" success="True" time="0.2231" asserts="0" description="Single Result">
                <results>
                  <test-case description="one result returned" name="Public/Get-RubrikDatabase.Single Result.one result returned" time="0.0276" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify name" name="Public/Get-RubrikDatabase.Single Result.verify name" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify SLA name" name="Public/Get-RubrikDatabase.Single Result.verify SLA name" time="0.0252" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify SLA ID" name="Public/Get-RubrikDatabase.Single Result.verify SLA ID" time="0.0249" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify Instance" name="Public/Get-RubrikDatabase.Single Result.verify Instance" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Get-RubrikDatabase.Parameter Validation.Parameter ID cannot be $null" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Get-RubrikDatabase.Parameter Validation.Parameter ID cannot be empty" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters Id and Name cannot be simultaneously used" name="Public/Get-RubrikDatabase.Parameter Validation.Parameters Id and Name cannot be simultaneously used" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikDatabaseFiles.Tests.ps1" executed="True" result="Success" success="True" time="0.5616" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikDatabaseFiles.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikDatabaseFiles" executed="True" result="Success" success="True" time="0.2697" asserts="0" description="Public/Get-RubrikDatabaseFiles">
            <results>
              <test-suite type="TestFixture" name="Verify Results" executed="True" result="Success" success="True" time="0.1325" asserts="0" description="Verify Results">
                <results>
                  <test-case description="Should return two results" name="Public/Get-RubrikDatabaseFiles.Verify Results.Should return two results" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Results match expected values" name="Public/Get-RubrikDatabaseFiles.Verify Results.Results match expected values" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.1166" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Get-RubrikDatabaseFiles.Parameter Validation.Parameter ID cannot be $null" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Get-RubrikDatabaseFiles.Parameter Validation.Parameter ID cannot be empty" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters Time and RecoveryDateTime cannot be simultaneously used" name="Public/Get-RubrikDatabaseFiles.Parameter Validation.Parameters Time and RecoveryDateTime cannot be simultaneously used" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikDatabaseMount.Tests.ps1" executed="True" result="Success" success="True" time="0.9316" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikDatabaseMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikDatabaseMount" executed="True" result="Success" success="True" time="0.6054" asserts="0" description="Public/Get-RubrikDatabaseMount">
            <results>
              <test-suite type="TestFixture" name="Multiple Results" executed="True" result="Success" success="True" time="0.1822" asserts="0" description="Multiple Results">
                <results>
                  <test-case description="Runnnig with no parameters should return two results" name="Public/Get-RubrikDatabaseMount.Multiple Results.Runnnig with no parameters should return two results" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Query based on ID" name="Public/Get-RubrikDatabaseMount.Multiple Results.Query based on ID" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Query based on SourceDatabaseName" name="Public/Get-RubrikDatabaseMount.Multiple Results.Query based on SourceDatabaseName" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Query based on TargetInstanceId" name="Public/Get-RubrikDatabaseMount.Multiple Results.Query based on TargetInstanceId" time="0.0255" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Single Result" executed="True" result="Success" success="True" time="0.4029" asserts="0" description="Single Result">
                <results>
                  <test-case description="Query based on ID" name="Public/Get-RubrikDatabaseMount.Single Result.Query based on ID" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Results match expected values" name="Public/Get-RubrikDatabaseMount.Single Result.Results match expected values" time="0.0627" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Query based on MountedDatabaseName" name="Public/Get-RubrikDatabaseMount.Single Result.Query based on MountedDatabaseName" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Query based on SourceDatabaseName" name="Public/Get-RubrikDatabaseMount.Single Result.Query based on SourceDatabaseName" time="0.0267" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Query based on TargetInstanceId" name="Public/Get-RubrikDatabaseMount.Single Result.Query based on TargetInstanceId" time="0.0237" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikDatabaseRecoverableRange.Tests.ps1" executed="True" result="Success" success="True" time="0.6046" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikDatabaseRecoverableRange.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikDatabaseRecoverableRange" executed="True" result="Success" success="True" time="0.2988" asserts="0" description="Public/Get-RubrikDatabaseRecoverableRange">
            <results>
              <test-suite type="TestFixture" name="Multiple Results" executed="True" result="Success" success="True" time="0.1206" asserts="0" description="Multiple Results">
                <results>
                  <test-case description="Query based on ID" name="Public/Get-RubrikDatabaseRecoverableRange.Multiple Results.Query based on ID" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Single Result" executed="True" result="Success" success="True" time="0.1159" asserts="0" description="Single Result">
                <results>
                  <test-case description="Query based on ID and time range" name="Public/Get-RubrikDatabaseRecoverableRange.Single Result.Query based on ID and time range" time="0.0271" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Results match expected values" name="Public/Get-RubrikDatabaseRecoverableRange.Single Result.Results match expected values" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0318" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Get-RubrikDatabaseRecoverableRange.Parameter Validation.Parameter ID cannot be $null" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Get-RubrikDatabaseRecoverableRange.Parameter Validation.Parameter ID cannot be empty" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikEvent.Tests.ps1" executed="True" result="Success" success="True" time="0.5159" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikEvent.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikEvent" executed="True" result="Success" success="True" time="0.225" asserts="0" description="Public/Get-RubrikEvent">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.2047" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 5" name="Public/Get-RubrikEvent.Results Filtering.Should Return count of 5" time="0.0855" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not run with Name parameter" name="Public/Get-RubrikEvent.Results Filtering.Should not run with Name parameter" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Date property should be a datetime object" name="Public/Get-RubrikEvent.Results Filtering.Date property should be a datetime object" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikFileset.Tests.ps1" executed="True" result="Success" success="True" time="0.7358" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikFileset.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikFileset" executed="True" result="Success" success="True" time="0.4426" asserts="0" description="Public/Get-RubrikFileset">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.3309" asserts="0" description="Returned Results">
                <results>
                  <test-case description="No parameters returns all results" name="Public/Get-RubrikFileset.Returned Results.No parameters returns all results" time="0.0661" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="-Name should filter and not use in-fix search" name="Public/Get-RubrikFileset.Returned Results.-Name should filter and not use in-fix search" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="-NameFilter should not filter and use in-fix search" name="Public/Get-RubrikFileset.Returned Results.-NameFilter should not filter and use in-fix search" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="-HostName should filter and not use in-fix search" name="Public/Get-RubrikFileset.Returned Results.-HostName should filter and not use in-fix search" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="-HostNameFilter should not filter and use in-fix search" name="Public/Get-RubrikFileset.Returned Results.-HostNameFilter should not filter and use in-fix search" time="0.0275" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="SLA mapping" name="Public/Get-RubrikFileset.Returned Results.SLA mapping" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.09" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="ID Missing" name="Public/Get-RubrikFileset.Parameter Validation.ID Missing" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ID cannot be null or empty" name="Public/Get-RubrikFileset.Parameter Validation.ID cannot be null or empty" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Name missing" name="Public/Get-RubrikFileset.Parameter Validation.Name missing" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Hostname missing" name="Public/Get-RubrikFileset.Parameter Validation.Hostname missing" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="TemplateId missing" name="Public/Get-RubrikFileset.Parameter Validation.TemplateId missing" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="PrimaryClusterId missing" name="Public/Get-RubrikFileset.Parameter Validation.PrimaryClusterId missing" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ShareId missing" name="Public/Get-RubrikFileset.Parameter Validation.ShareId missing" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="EffectiveSlaDomainId missing" name="Public/Get-RubrikFileset.Parameter Validation.EffectiveSlaDomainId missing" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikFilesetTemplate.Tests.ps1" executed="True" result="Success" success="True" time="0.482" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikFilesetTemplate.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikFilesetTemplate" executed="True" result="Success" success="True" time="0.1775" asserts="0" description="Public/Get-RubrikFilesetTemplate">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.1002" asserts="0" description="Returned Results">
                <results>
                  <test-case description="No parameters returns all results" name="Public/Get-RubrikFilesetTemplate.Returned Results.No parameters returns all results" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0543" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="ID Missing" name="Public/Get-RubrikFilesetTemplate.Parameter Validation.ID Missing" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Name missing" name="Public/Get-RubrikFilesetTemplate.Parameter Validation.Name missing" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validate OperatingSystemType ParameterSet" name="Public/Get-RubrikFilesetTemplate.Parameter Validation.Validate OperatingSystemType ParameterSet" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validate ShareType ParameterSet" name="Public/Get-RubrikFilesetTemplate.Parameter Validation.Validate ShareType ParameterSet" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikHost.Tests.ps1" executed="True" result="Success" success="True" time="0.6455" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikHost.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikHost" executed="True" result="Success" success="True" time="0.2885" asserts="0" description="Public/Get-RubrikHost">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.2687" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 5" name="Public/Get-RubrikHost.Results Filtering.Should Return count of 5" time="0.0471" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return host05" name="Public/Get-RubrikHost.Results Filtering.Should Return host05" time="0.0291" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return Host:::22222" name="Public/Get-RubrikHost.Results Filtering.Should Return Host:::22222" time="0.0246" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return count of 0 " name="Public/Get-RubrikHost.Results Filtering.Should return count of 0 " time="0.038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikHyperVVM.Tests.ps1" executed="True" result="Success" success="True" time="0.6131" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikHyperVVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikHyperVVM" executed="True" result="Success" success="True" time="0.2757" asserts="0" description="Public/Get-RubrikHyperVVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.1069" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="should overwrite $SLAID" name="Public/Get-RubrikHyperVVM.Parameter/SLA.should overwrite $SLAID" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/SLAID" executed="True" result="Success" success="True" time="0.0744" asserts="0" description="Parameter/SLAID">
                <results>
                  <test-case description="should not overwrite $SLAID" name="Public/Get-RubrikHyperVVM.Parameter/SLAID.should not overwrite $SLAID" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0688" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Name cannot be $null" name="Public/Get-RubrikHyperVVM.Parameter Validation.Parameter Name cannot be $null" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Name cannot be empty" name="Public/Get-RubrikHyperVVM.Parameter Validation.Parameter Name cannot be empty" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be $null" name="Public/Get-RubrikHyperVVM.Parameter Validation.Parameter ID cannot be $null" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Get-RubrikHyperVVM.Parameter Validation.Parameter ID cannot be empty" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters Id and Name cannot be simultaneously used" name="Public/Get-RubrikHyperVVM.Parameter Validation.Parameters Id and Name cannot be simultaneously used" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikLDAP.Tests.ps1" executed="True" result="Success" success="True" time="0.4798" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikLDAP.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikLDAP" executed="True" result="Success" success="True" time="0.1509" asserts="0" description="Public/Get-RubrikLDAP">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.1333" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="Should return local" name="Public/Get-RubrikLDAP.Parameter/SLA.Should return local" time="0.0278" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return rubrik.com" name="Public/Get-RubrikLDAP.Parameter/SLA.Should return rubrik.com" time="0.0205" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Output should be PSCustomObject" name="Public/Get-RubrikLDAP.Parameter/SLA.Output should be PSCustomObject" time="0.0253" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikLogShipping.Tests.ps1" executed="True" result="Success" success="True" time="0.5016" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikLogShipping.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikLogShipping" executed="True" result="Success" success="True" time="0.2027" asserts="0" description="Public/Get-RubrikLogShipping">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.1212" asserts="0" description="Returned Results">
                <results>
                  <test-case description="No parameters returns all results" name="Public/Get-RubrikLogShipping.Returned Results.No parameters returns all results" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return 4 properties" name="Public/Get-RubrikLogShipping.Returned Results.Should return 4 properties" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0613" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="ID Missing" name="Public/Get-RubrikLogShipping.Parameter Validation.ID Missing" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="PrimaryDatabasename must be System.String" name="Public/Get-RubrikLogShipping.Parameter Validation.PrimaryDatabasename must be System.String" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Status validation must be OK, Broken, Initializing or Stale" name="Public/Get-RubrikLogShipping.Parameter Validation.Status validation must be OK, Broken, Initializing or Stale" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="sort_by validation must be &quot;secondaryDatabaseName&quot;, &quot;primaryDatabaseName&quot;, &quot;lastAppliedPoint&quot;, &quot;location&quot;" name="Public/Get-RubrikLogShipping.Parameter Validation.sort_by validation must be &quot;secondaryDatabaseName&quot;, &quot;primaryDatabaseName&quot;, &quot;lastAppliedPoint&quot;, &quot;location&quot;" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="sort_order validation must be &quot;asc,desc&quot;" name="Public/Get-RubrikLogShipping.Parameter Validation.sort_order validation must be &quot;asc,desc&quot;" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikManagedVolume.Tests.ps1" executed="True" result="Success" success="True" time="0.5378" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikManagedVolume.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikManagedVolume" executed="True" result="Success" success="True" time="0.2414" asserts="0" description="Public/Get-RubrikManagedVolume">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.2216" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 2" name="Public/Get-RubrikManagedVolume.Results Filtering.Should Return count of 2" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Name filter non existant should return count of 0" name="Public/Get-RubrikManagedVolume.Results Filtering.Name filter non existant should return count of 0" time="0.0256" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Name Filter - ID should be ManagedVolume:::22222" name="Public/Get-RubrikManagedVolume.Results Filtering.Name Filter - ID should be ManagedVolume:::22222" time="0.0236" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="SLA Filter should be count of 1" name="Public/Get-RubrikManagedVolume.Results Filtering.SLA Filter should be count of 1" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing ID Exception" name="Public/Get-RubrikManagedVolume.Results Filtering.Missing ID Exception" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Null or empty ID Exception" name="Public/Get-RubrikManagedVolume.Results Filtering.Null or empty ID Exception" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikManagedVolumeExport.Tests.ps1" executed="True" result="Success" success="True" time="0.4482" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikManagedVolumeExport.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikManagedVolumeExport" executed="True" result="Success" success="True" time="0.16" asserts="0" description="Public/Get-RubrikManagedVolumeExport">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.1428" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Getting all exports should return count of 3" name="Public/Get-RubrikManagedVolumeExport.Results Filtering.Getting all exports should return count of 3" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Source name filter non existant name should return count of 0" name="Public/Get-RubrikManagedVolumeExport.Results Filtering.Source name filter non existant name should return count of 0" time="0.0237" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Source name filter on individual name should return id of 33333-22222-33333" name="Public/Get-RubrikManagedVolumeExport.Results Filtering.Source name filter on individual name should return id of 33333-22222-33333" time="0.0205" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing id value should throw exception" name="Public/Get-RubrikManagedVolumeExport.Results Filtering.Missing id value should throw exception" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikMount.Tests.ps1" executed="True" result="Success" success="True" time="0.4861" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikMount" executed="True" result="Success" success="True" time="0.1944" asserts="0" description="Public/Get-RubrikMount">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.1771" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Filter should return count of 4" name="Public/Get-RubrikMount.Results Filtering.Filter should return count of 4" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return proper host" name="Public/Get-RubrikMount.Results Filtering.Should return proper host" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Filter vmId should return count of 2" name="Public/Get-RubrikMount.Results Filtering.Filter vmId should return count of 2" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Nonexistant id should return count of 0 " name="Public/Get-RubrikMount.Results Filtering.Nonexistant id should return count of 0 " time="0.0257" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikNutanixVM.Tests.ps1" executed="True" result="Success" success="True" time="0.5413" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikNutanixVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikNutanixVM" executed="True" result="Success" success="True" time="0.249" asserts="0" description="Public/Get-RubrikNutanixVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.0964" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="should overwrite $SLAID" name="Public/Get-RubrikNutanixVM.Parameter/SLA.should overwrite $SLAID" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/SLAID" executed="True" result="Success" success="True" time="0.0654" asserts="0" description="Parameter/SLAID">
                <results>
                  <test-case description="should not overwrite $SLAID" name="Public/Get-RubrikNutanixVM.Parameter/SLAID.should not overwrite $SLAID" time="0.0251" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0597" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Name cannot be $null" name="Public/Get-RubrikNutanixVM.Parameter Validation.Parameter Name cannot be $null" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Name cannot be empty" name="Public/Get-RubrikNutanixVM.Parameter Validation.Parameter Name cannot be empty" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be $null" name="Public/Get-RubrikNutanixVM.Parameter Validation.Parameter ID cannot be $null" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Get-RubrikNutanixVM.Parameter Validation.Parameter ID cannot be empty" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters Id and Name cannot be simultaneously used" name="Public/Get-RubrikNutanixVM.Parameter Validation.Parameters Id and Name cannot be simultaneously used" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikOracleDB.Tests.ps1" executed="True" result="Success" success="True" time="0.5402" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikOracleDB.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikOracleDB" executed="True" result="Success" success="True" time="0.2495" asserts="0" description="Public/Get-RubrikOracleDB">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.1101" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="should overwrite $SLAID" name="Public/Get-RubrikOracleDB.Parameter/SLA.should overwrite $SLAID" time="0.0578" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/SLAID" executed="True" result="Success" success="True" time="0.1134" asserts="0" description="Parameter/SLAID">
                <results>
                  <test-case description="SLAID Query should return OracleDB1 DB" name="Public/Get-RubrikOracleDB.Parameter/SLAID.SLAID Query should return OracleDB1 DB" time="0.0287" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="SLAID Query should return OracleDB1 SLA" name="Public/Get-RubrikOracleDB.Parameter/SLAID.SLAID Query should return OracleDB1 SLA" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikOrganization.Tests.ps1" executed="True" result="Success" success="True" time="0.551" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikOrganization.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikOrganization" executed="True" result="Success" success="True" time="0.2555" asserts="0" description="Public/Get-RubrikOrganization">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.1748" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 5" name="Public/Get-RubrikOrganization.Results Filtering.Should Return count of 5" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return org1" name="Public/Get-RubrikOrganization.Results Filtering.Should Return org1" time="0.0235" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return Organization:4" name="Public/Get-RubrikOrganization.Results Filtering.Should Return Organization:4" time="0.0228" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return count of 0 " name="Public/Get-RubrikOrganization.Results Filtering.Should return count of 0 " time="0.0228" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0575" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Name Missing" name="Public/Get-RubrikOrganization.Parameter Validation.Name Missing" time="0.0122" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ID Missing" name="Public/Get-RubrikOrganization.Parameter Validation.ID Missing" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="isGlobal must be Boolean" name="Public/Get-RubrikOrganization.Parameter Validation.isGlobal must be Boolean" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikReport.Tests.ps1" executed="True" result="Success" success="True" time="0.4224" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikReport.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikReport" executed="True" result="Success" success="True" time="0.1324" asserts="0" description="Public/Get-RubrikReport">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.0703" asserts="0" description="Returned Results">
                <results>
                  <test-case description="No parameters returns all results" name="Public/Get-RubrikReport.Returned Results.No parameters returns all results" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="ID Missing" name="Public/Get-RubrikReport.Parameter Validation.ID Missing" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Name must be System.String" name="Public/Get-RubrikReport.Parameter Validation.Name must be System.String" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Type validation must be canned or custom" name="Public/Get-RubrikReport.Parameter Validation.Type validation must be canned or custom" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikReportData.Tests.ps1" executed="True" result="Success" success="True" time="0.5053" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikReportData.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikReportData" executed="True" result="Success" success="True" time="0.2088" asserts="0" description="Public/Get-RubrikReportData">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.1061" asserts="0" description="Returned Results">
                <results>
                  <test-case description="Returns reportTemplate" name="Public/Get-RubrikReportData.Returned Results.Returns reportTemplate" time="0.0626" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0824" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="ID Missing" name="Public/Get-RubrikReportData.Parameter Validation.ID Missing" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Name Missing" name="Public/Get-RubrikReportData.Parameter Validation.Name Missing" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="TaskType Missing" name="Public/Get-RubrikReportData.Parameter Validation.TaskType Missing" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="TaskStatus Missing" name="Public/Get-RubrikReportData.Parameter Validation.TaskStatus Missing" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ObjectType Missing" name="Public/Get-RubrikReportData.Parameter Validation.ObjectType Missing" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validate ComplianceStatus" name="Public/Get-RubrikReportData.Parameter Validation.Validate ComplianceStatus" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikRequest.Tests.ps1" executed="True" result="Success" success="True" time="0.4657" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikRequest.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikRequest" executed="True" result="Success" success="True" time="0.146" asserts="0" description="Public/Get-RubrikRequest">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.0807" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return Succeeded" name="Public/Get-RubrikRequest.Results Filtering.Should Return Succeeded" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="ID Missing" name="Public/Get-RubrikRequest.Parameter Validation.ID Missing" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Type Validate Set" name="Public/Get-RubrikRequest.Parameter Validation.Type Validate Set" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikSLA.Tests.ps1" executed="True" result="Success" success="True" time="1.341" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikSLA.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikSLA" executed="True" result="Success" success="True" time="1.0178" asserts="0" description="Public/Get-RubrikSLA">
            <results>
              <test-suite type="TestFixture" name="Parameter/Name-v1" executed="True" result="Success" success="True" time="0.4226" asserts="0" description="Parameter/Name-v1">
                <results>
                  <test-case description="should filter on SLA name" name="Public/Get-RubrikSLA.Parameter/Name-v1.should filter on SLA name" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="frequencies array should be populated" name="Public/Get-RubrikSLA.Parameter/Name-v1.frequencies array should be populated" time="0.0254" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v1.hourly frequency set" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v1.hourly retention set" time="0.0242" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v1.daily frequency set" time="0.0228" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily retention set" name="Public/Get-RubrikSLA.Parameter/Name-v1.daily retention set" time="0.0225" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v1.weekly frequency set" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v1.weekly retention set" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v1.monthly frequency set" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v1.monthly retention set" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v1.yearly frequency set" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v1.yearly retention set" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/Name-v2" executed="True" result="Success" success="True" time="0.5145" asserts="0" description="Parameter/Name-v2">
                <results>
                  <test-case description="should filter on SLA name" name="Public/Get-RubrikSLA.Parameter/Name-v2.should filter on SLA name" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly frequency exists" name="Public/Get-RubrikSLA.Parameter/Name-v2.hourly frequency exists" time="0.0287" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v2.hourly frequency set" time="0.0225" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v2.hourly retention set" time="0.0279" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily frequency exists" name="Public/Get-RubrikSLA.Parameter/Name-v2.daily frequency exists" time="0.0196" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v2.daily frequency set" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily retention set" name="Public/Get-RubrikSLA.Parameter/Name-v2.daily retention set" time="0.0211" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly frequency exists" name="Public/Get-RubrikSLA.Parameter/Name-v2.weekly frequency exists" time="0.0226" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v2.weekly frequency set" time="0.0198" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v2.weekly retention set" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly frequency exists" name="Public/Get-RubrikSLA.Parameter/Name-v2.monthly frequency exists" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v2.monthly frequency set" time="0.0211" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v2.monthly retention set" time="0.0202" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly frequency exists" name="Public/Get-RubrikSLA.Parameter/Name-v2.yearly frequency exists" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly frequency set" name="Public/Get-RubrikSLA.Parameter/Name-v2.yearly frequency set" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly retention set" name="Public/Get-RubrikSLA.Parameter/Name-v2.yearly retention set" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0561" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Name cannot be $null" name="Public/Get-RubrikSLA.Parameter Validation.Parameter Name cannot be $null" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Name cannot be empty" name="Public/Get-RubrikSLA.Parameter Validation.Parameter Name cannot be empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be $null" name="Public/Get-RubrikSLA.Parameter Validation.Parameter ID cannot be $null" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Get-RubrikSLA.Parameter Validation.Parameter ID cannot be empty" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters ID and Name cannot be simultaneously used" name="Public/Get-RubrikSLA.Parameter Validation.Parameters ID and Name cannot be simultaneously used" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikSnapshot.Tests.ps1" executed="True" result="Success" success="True" time="0.7149" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikSnapshot.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikSnapshot" executed="True" result="Success" success="True" time="0.4283" asserts="0" description="Public/Get-RubrikSnapshot">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.3516" asserts="0" description="Parameters">
                <results>
                  <test-case description="Get all snapshots" name="Public/Get-RubrikSnapshot.Parameters.Get all snapshots" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Get latest snapshot" name="Public/Get-RubrikSnapshot.Parameters.Get latest snapshot" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Get specific snapshot" name="Public/Get-RubrikSnapshot.Parameters.Get specific snapshot" time="0.0261" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Get on demand snapshots" name="Public/Get-RubrikSnapshot.Parameters.Get on demand snapshots" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Get archived snapshots" name="Public/Get-RubrikSnapshot.Parameters.Get archived snapshots" time="0.0198" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Test -ExactMatch" name="Public/Get-RubrikSnapshot.Parameters.Test -ExactMatch" time="0.0244" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Test -Range" name="Public/Get-RubrikSnapshot.Parameters.Test -Range" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Test -Range and -ExactMatch" name="Public/Get-RubrikSnapshot.Parameters.Test -Range and -ExactMatch" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Test -Range with out of range date" name="Public/Get-RubrikSnapshot.Parameters.Test -Range with out of range date" time="0.0196" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0572" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Get-RubrikSnapshot.Parameter Validation.Parameter ID cannot be $null" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Get-RubrikSnapshot.Parameter Validation.Parameter ID cannot be empty" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Date cannot be $null" name="Public/Get-RubrikSnapshot.Parameter Validation.Parameter Date cannot be $null" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Date cannot be empty" name="Public/Get-RubrikSnapshot.Parameter Validation.Parameter Date cannot be empty" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters Date and Latest cannot be simultaneously used" name="Public/Get-RubrikSnapshot.Parameter Validation.Parameters Date and Latest cannot be simultaneously used" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikSoftwareVersion.Tests.ps1" executed="True" result="Success" success="True" time="0.3689" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikSoftwareVersion.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikSoftwareVersion" executed="True" result="Success" success="True" time="0.0784" asserts="0" description="Public/Get-RubrikSoftwareVersion">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.0622" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should return 1" name="Public/Get-RubrikSoftwareVersion.Results Filtering.Should return 1" time="0.023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Server cannot be null" name="Public/Get-RubrikSoftwareVersion.Results Filtering.Server cannot be null" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikSQLInstance.Tests.ps1" executed="True" result="Success" success="True" time="0.808" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikSQLInstance.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikSQLInstance" executed="True" result="Success" success="True" time="0.4436" asserts="0" description="Public/Get-RubrikSQLInstance">
            <results>
              <test-suite type="TestFixture" name="Multiple Results" executed="True" result="Success" success="True" time="0.2363" asserts="0" description="Multiple Results">
                <results>
                  <test-case description="runnnig with no parameters should return three results" name="Public/Get-RubrikSQLInstance.Multiple Results.runnnig with no parameters should return three results" time="0.0266" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should filter on Name" name="Public/Get-RubrikSQLInstance.Multiple Results.should filter on Name" time="0.0543" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should filter on SLA name" name="Public/Get-RubrikSQLInstance.Multiple Results.should filter on SLA name" time="0.066" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should filter on Hostname" name="Public/Get-RubrikSQLInstance.Multiple Results.should filter on Hostname" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Single Result" executed="True" result="Success" success="True" time="0.1874" asserts="0" description="Single Result">
                <results>
                  <test-case description="one result returned" name="Public/Get-RubrikSQLInstance.Single Result.one result returned" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify name" name="Public/Get-RubrikSQLInstance.Single Result.verify name" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify ID" name="Public/Get-RubrikSQLInstance.Single Result.verify ID" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify SLA name" name="Public/Get-RubrikSQLInstance.Single Result.verify SLA name" time="0.022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify SLA ID" name="Public/Get-RubrikSQLInstance.Single Result.verify SLA ID" time="0.0244" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikSupportTunnel.Tests.ps1" executed="True" result="Success" success="True" time="0.3951" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikSupportTunnel.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikSupportTunnel" executed="True" result="Success" success="True" time="0.0843" asserts="0" description="Public/Get-RubrikSupportTunnel">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0679" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Results filtering" name="Public/Get-RubrikSupportTunnel.Parameter Validation.Results filtering" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikUnmanagedObject.Tests.ps1" executed="True" result="Success" success="True" time="0.4169" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikUnmanagedObject.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikUnmanagedObject" executed="True" result="Success" success="True" time="0.1301" asserts="0" description="Public/Get-RubrikUnmanagedObject">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.0673" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should return count of 4" name="Public/Get-RubrikUnmanagedObject.Results Filtering.Should return count of 4" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Name Missing" name="Public/Get-RubrikUnmanagedObject.Parameter Validation.Name Missing" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Type - Validate Set" name="Public/Get-RubrikUnmanagedObject.Parameter Validation.Type - Validate Set" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Status - Validate Set" name="Public/Get-RubrikUnmanagedObject.Parameter Validation.Status - Validate Set" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikUser.Tests.ps1" executed="True" result="Success" success="True" time="0.4835" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikUser.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikUser" executed="True" result="Success" success="True" time="0.1976" asserts="0" description="Public/Get-RubrikUser">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.1242" asserts="0" description="Returned Results">
                <results>
                  <test-case description="No parameters returns all results" name="Public/Get-RubrikUser.Returned Results.No parameters returns all results" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Trigger Get-RubrikLDAP" name="Public/Get-RubrikUser.Returned Results.Trigger Get-RubrikLDAP" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0476" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="ID Missing" name="Public/Get-RubrikUser.Parameter Validation.ID Missing" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Username must be System.String" name="Public/Get-RubrikUser.Parameter Validation.Username must be System.String" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="AuthDomainId must be System.String" name="Public/Get-RubrikUser.Parameter Validation.AuthDomainId must be System.String" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validate Parameter Set" name="Public/Get-RubrikUser.Parameter Validation.Validate Parameter Set" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikVersion.Tests.ps1" executed="True" result="Success" success="True" time="0.3819" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikVersion.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikVersion" executed="True" result="Success" success="True" time="0.1061" asserts="0" description="Public/Get-RubrikVersion">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.0903" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 4" name="Public/Get-RubrikVersion.Results Filtering.Should Return count of 4" time="0.0271" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return Cluster_B" name="Public/Get-RubrikVersion.Results Filtering.Should Return Cluster_B" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikVM.Tests.ps1" executed="True" result="Success" success="True" time="0.543" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikVM" executed="True" result="Success" success="True" time="0.2409" asserts="0" description="Public/Get-RubrikVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.089" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="should overwrite $SLAID" name="Public/Get-RubrikVM.Parameter/SLA.should overwrite $SLAID" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/SLAID" executed="True" result="Success" success="True" time="0.0683" asserts="0" description="Parameter/SLAID">
                <results>
                  <test-case description="should not overwrite $SLAID" name="Public/Get-RubrikVM.Parameter/SLAID.should not overwrite $SLAID" time="0.0272" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0622" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Name cannot be $null" name="Public/Get-RubrikVM.Parameter Validation.Parameter Name cannot be $null" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Name cannot be empty" name="Public/Get-RubrikVM.Parameter Validation.Parameter Name cannot be empty" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be $null" name="Public/Get-RubrikVM.Parameter Validation.Parameter ID cannot be $null" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Get-RubrikVM.Parameter Validation.Parameter ID cannot be empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters Id and Name cannot be simultaneously used" name="Public/Get-RubrikVM.Parameter Validation.Parameters Id and Name cannot be simultaneously used" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikVMwareDatastore.Tests.ps1" executed="True" result="Success" success="True" time="0.4846" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikVMwareDatastore.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikVMwareDatastore" executed="True" result="Success" success="True" time="0.2002" asserts="0" description="Public/Get-RubrikVMwareDatastore">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.1818" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 4" name="Public/Get-RubrikVMwareDatastore.Results Filtering.Should Return count of 4" time="0.0247" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return datastore03" name="Public/Get-RubrikVMwareDatastore.Results Filtering.Should Return datastore03" time="0.02" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return Datastore:::22222" name="Public/Get-RubrikVMwareDatastore.Results Filtering.Should Return Datastore:::22222" time="0.0204" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return count of 2 " name="Public/Get-RubrikVMwareDatastore.Results Filtering.Should return count of 2 " time="0.0247" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return count of 0 " name="Public/Get-RubrikVMwareDatastore.Results Filtering.Should return count of 0 " time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikVMwareHost.Tests.ps1" executed="True" result="Success" success="True" time="0.4703" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikVMwareHost.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikVMwareHost" executed="True" result="Success" success="True" time="0.1917" asserts="0" description="Public/Get-RubrikVMwareHost">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.1696" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should Return count of 2" name="Public/Get-RubrikVMwareHost.Results Filtering.Should Return count of 2" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return esxi01.domain.local" name="Public/Get-RubrikVMwareHost.Results Filtering.Should Return esxi01.domain.local" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return VMwareHost:::44444" name="Public/Get-RubrikVMwareHost.Results Filtering.Should Return VMwareHost:::44444" time="0.0231" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return count of 4 " name="Public/Get-RubrikVMwareHost.Results Filtering.Should return count of 4 " time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikVolumeGroup.Tests.ps1" executed="True" result="Success" success="True" time="0.4925" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikVolumeGroup.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikVolumeGroup" executed="True" result="Success" success="True" time="0.2064" asserts="0" description="Public/Get-RubrikVolumeGroup">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.1875" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Requesting all should return count of 4" name="Public/Get-RubrikVolumeGroup.Results Filtering.Requesting all should return count of 4" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Requesting name of VG04 should return id of VolumeGroup:::44444" name="Public/Get-RubrikVolumeGroup.Results Filtering.Requesting name of VG04 should return id of VolumeGroup:::44444" time="0.0252" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Requesting SLA Gold returns count of 3" name="Public/Get-RubrikVolumeGroup.Results Filtering.Requesting SLA Gold returns count of 3" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing ID Exception" name="Public/Get-RubrikVolumeGroup.Results Filtering.Missing ID Exception" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing Name Exception" name="Public/Get-RubrikVolumeGroup.Results Filtering.Missing Name Exception" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Get-RubrikVolumeGroupMount.Tests.ps1" executed="True" result="Success" success="True" time="0.4077" asserts="0" description="C:\projects\powershell-module\tests\Get-RubrikVolumeGroupMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Get-RubrikVolumeGroupMount" executed="True" result="Success" success="True" time="0.1141" asserts="0" description="Public/Get-RubrikVolumeGroupMount">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.0928" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Requesting all should return count of 4" name="Public/Get-RubrikVolumeGroupMount.Results Filtering.Requesting all should return count of 4" time="0.0286" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing ID Exception" name="Public/Get-RubrikVolumeGroupMount.Results Filtering.Missing ID Exception" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing Source Host Exception" name="Public/Get-RubrikVolumeGroupMount.Results Filtering.Missing Source Host Exception" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Invoke-RubrikRestCall.Tests.ps1" executed="True" result="Success" success="True" time="0.4465" asserts="0" description="C:\projects\powershell-module\tests\Invoke-RubrikRestCall.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Invoke-RubrikRestCall" executed="True" result="Success" success="True" time="0.1447" asserts="0" description="Public/Invoke-RubrikRestCall">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.067" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Requesting all should return total of 3" name="Public/Invoke-RubrikRestCall.Results Filtering.Requesting all should return total of 3" time="0.0289" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0534" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Endpoint cannot be null or empty" name="Public/Invoke-RubrikRestCall.Parameter Validation.Endpoint cannot be null or empty" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ValidateSet - Method" name="Public/Invoke-RubrikRestCall.Parameter Validation.ValidateSet - Method" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Query cannot be null or empty" name="Public/Invoke-RubrikRestCall.Parameter Validation.Query cannot be null or empty" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Body cannot be null or empty" name="Public/Invoke-RubrikRestCall.Parameter Validation.Body cannot be null or empty" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Move-RubrikMountVMDK.Tests.ps1" executed="True" result="Success" success="True" time="0.455" asserts="0" description="C:\projects\powershell-module\tests\Move-RubrikMountVMDK.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Move-RubrikMountVMDK" executed="True" result="Success" success="True" time="0.1543" asserts="0" description="Public/Move-RubrikMountVMDK">
            <results>
              <test-suite type="TestFixture" name="Parameter/Date" executed="True" result="Success" success="True" time="0.0925" asserts="0" description="Parameter/Date">
                <results>
                  <test-case description="Should detect invalid date" name="Public/Move-RubrikMountVMDK.Parameter/Date.Should detect invalid date" time="0.0531" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0351" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameters SourceVM and Cleanup cannot be simultaneously used" name="Public/Move-RubrikMountVMDK.Parameter Validation.Parameters SourceVM and Cleanup cannot be simultaneously used" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters TargetVM and Cleanup cannot be simultaneously used" name="Public/Move-RubrikMountVMDK.Parameter Validation.Parameters TargetVM and Cleanup cannot be simultaneously used" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikAPIToken.Tests.ps1" executed="True" result="Success" success="True" time="0.3765" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikAPIToken.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikAPIToken" executed="True" result="Success" success="True" time="0.0794" asserts="0" description="Public/New-RubrikAPIToken">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0549" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Expiration cannot be $null" name="Public/New-RubrikAPIToken.Parameter Validation.Parameter Expiration cannot be $null" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Expiration cannot be empty" name="Public/New-RubrikAPIToken.Parameter Validation.Parameter Expiration cannot be empty" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter OrganizationId cannot be $null" name="Public/New-RubrikAPIToken.Parameter Validation.Parameter OrganizationId cannot be $null" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter OrganizationId cannot be empty" name="Public/New-RubrikAPIToken.Parameter Validation.Parameter OrganizationId cannot be empty" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikBootstrap.Tests.ps1" executed="True" result="Success" success="True" time="0.7772" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikBootstrap.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikBootstrap" executed="True" result="Success" success="True" time="0.507" asserts="0" description="Public/New-RubrikBootstrap">
            <results>
              <test-suite type="TestFixture" name="Test script logic" executed="True" result="Success" success="True" time="0.2654" asserts="0" description="Test script logic">
                <results>
                  <test-case description="Should run without error - With all values provided" name="Public/New-RubrikBootstrap.Test script logic.Should run without error - With all values provided" time="0.0731" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should run without error - With nulled dnsNameServers" name="Public/New-RubrikBootstrap.Test script logic.Should run without error - With nulled dnsNameServers" time="0.0279" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should run without error - With nulled DNSsearchdomains" name="Public/New-RubrikBootstrap.Test script logic.Should run without error - With nulled DNSsearchdomains" time="0.0258" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should run without error - With empty DNSsearchdomains" name="Public/New-RubrikBootstrap.Test script logic.Should run without error - With empty DNSsearchdomains" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should run without error - With nulled ntpserverconfigs" name="Public/New-RubrikBootstrap.Test script logic.Should run without error - With nulled ntpserverconfigs" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should run without error - Multiple node configuration" name="Public/New-RubrikBootstrap.Test script logic.Should run without error - Multiple node configuration" time="0.0226" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ValidationScript of -nodeConfigs Parameter" executed="True" result="Success" success="True" time="0.0603" asserts="0" description="ValidationScript of -nodeConfigs Parameter">
                <results>
                  <test-case description="Empty nodeconfigs should throw error" name="Public/New-RubrikBootstrap.ValidationScript of -nodeConfigs Parameter.Empty nodeconfigs should throw error" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Junk data should throw error" name="Public/New-RubrikBootstrap.ValidationScript of -nodeConfigs Parameter.Junk data should throw error" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Incorrect address should throw error" name="Public/New-RubrikBootstrap.ValidationScript of -nodeConfigs Parameter.Incorrect address should throw error" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing gateway should throw error" name="Public/New-RubrikBootstrap.ValidationScript of -nodeConfigs Parameter.Missing gateway should throw error" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Validate one off region works as expected" executed="True" result="Success" success="True" time="0.1557" asserts="0" description="Validate one off region works as expected">
                <results>
                  <test-case description="Nulled ntpserverconfigs should add default ntp server" name="Public/New-RubrikBootstrap.Validate one off region works as expected.Nulled ntpserverconfigs should add default ntp server" time="0.0234" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Nulled dnsSearchDomains should not appear in body" name="Public/New-RubrikBootstrap.Validate one off region works as expected.Nulled dnsSearchDomains should not appear in body" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Nulled dnsNameServers should set Google dns as default" name="Public/New-RubrikBootstrap.Validate one off region works as expected.Nulled dnsNameServers should set Google dns as default" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Multiple node configuration should be present in request" name="Public/New-RubrikBootstrap.Validate one off region works as expected.Multiple node configuration should be present in request" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikDatabaseMount.Tests.ps1" executed="True" result="Success" success="True" time="0.4547" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikDatabaseMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikDatabaseMount" executed="True" result="Success" success="True" time="0.1642" asserts="0" description="Public/New-RubrikDatabaseMount">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.0838" asserts="0" description="Parameters">
                <results>
                  <test-case description="Should return status of queued" name="Public/New-RubrikDatabaseMount.Parameters.Should return status of queued" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0616" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/New-RubrikDatabaseMount.Parameter Validation.Parameter ID cannot be $null" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/New-RubrikDatabaseMount.Parameter Validation.Parameter ID cannot be empty" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter MountedDatabaseName cannot be $null" name="Public/New-RubrikDatabaseMount.Parameter Validation.Parameter MountedDatabaseName cannot be $null" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter MountedDatabaseName cannot be empty" name="Public/New-RubrikDatabaseMount.Parameter Validation.Parameter MountedDatabaseName cannot be empty" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters TimestampMs and RecoveryDateTime cannot be simultaneously used" name="Public/New-RubrikDatabaseMount.Parameter Validation.Parameters TimestampMs and RecoveryDateTime cannot be simultaneously used" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikFileset.Tests.ps1" executed="True" result="Success" success="True" time="0.4155" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikFileset.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikFileset" executed="True" result="Success" success="True" time="0.1358" asserts="0" description="Public/New-RubrikFileset">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.0736" asserts="0" description="Returned Results">
                <results>
                  <test-case description="FilesetTemplate created" name="Public/New-RubrikFileset.Returned Results.FilesetTemplate created" time="0.031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="TemplateId missing" name="Public/New-RubrikFileset.Parameter Validation.TemplateId missing" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ShareId missing" name="Public/New-RubrikFileset.Parameter Validation.ShareId missing" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="HostId missing" name="Public/New-RubrikFileset.Parameter Validation.HostId missing" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikFilesetTemplate.Tests.ps1" executed="True" result="Success" success="True" time="0.5134" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikFilesetTemplate.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikFilesetTemplate" executed="True" result="Success" success="True" time="0.2271" asserts="0" description="Public/New-RubrikFilesetTemplate">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.1164" asserts="0" description="Returned Results">
                <results>
                  <test-case description="FilesetTemplate created" name="Public/New-RubrikFilesetTemplate.Returned Results.FilesetTemplate created" time="0.0761" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0833" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Name missing" name="Public/New-RubrikFilesetTemplate.Parameter Validation.Name missing" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Includes missing" name="Public/New-RubrikFilesetTemplate.Parameter Validation.Includes missing" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Excludes missing" name="Public/New-RubrikFilesetTemplate.Parameter Validation.Excludes missing" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validate OperatingSystemType ParameterSet" name="Public/New-RubrikFilesetTemplate.Parameter Validation.Validate OperatingSystemType ParameterSet" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validate ShareType ParameterSet" name="Public/New-RubrikFilesetTemplate.Parameter Validation.Validate ShareType ParameterSet" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validate BackupScriptErrorHandling ParameterSet" name="Public/New-RubrikFilesetTemplate.Parameter Validation.Validate BackupScriptErrorHandling ParameterSet" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="BackupScriptTimeout must be integer" name="Public/New-RubrikFilesetTemplate.Parameter Validation.BackupScriptTimeout must be integer" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikLogBackup.Tests.ps1" executed="True" result="Success" success="True" time="0.3996" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikLogBackup.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikLogBackup" executed="True" result="Success" success="True" time="0.1199" asserts="0" description="Public/New-RubrikLogBackup">
            <results>
              <test-suite type="TestFixture" name="Invoke Backup" executed="True" result="Success" success="True" time="0.0684" asserts="0" description="Invoke Backup">
                <results>
                  <test-case description="Should invoke log backup with QUEUED status" name="Public/New-RubrikLogBackup.Invoke Backup.Should invoke log backup with QUEUED status" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0302" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter id is missing" name="Public/New-RubrikLogBackup.Parameter Validation.Parameter id is missing" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id is empty" name="Public/New-RubrikLogBackup.Parameter Validation.Parameter id is empty" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikLogShipping.Tests.ps1" executed="True" result="Success" success="True" time="0.4391" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikLogShipping.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikLogShipping" executed="True" result="Success" success="True" time="0.1887" asserts="0" description="Public/New-RubrikLogShipping">
            <results>
              <test-suite type="TestFixture" name="New Log Shipping Results" executed="True" result="Success" success="True" time="0.1117" asserts="0" description="New Log Shipping Results">
                <results>
                  <test-case description="Should invoke new log shipping restore with QUEUED status" name="Public/New-RubrikLogShipping.New Log Shipping Results.Should invoke new log shipping restore with QUEUED status" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should invoke new log shipping restore correct ID" name="Public/New-RubrikLogShipping.New Log Shipping Results.Should invoke new log shipping restore correct ID" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.053" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter id is missing" name="Public/New-RubrikLogShipping.Parameter Validation.Parameter id is missing" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id is empty" name="Public/New-RubrikLogShipping.Parameter Validation.Parameter id is empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter targetDatabasename is empty" name="Public/New-RubrikLogShipping.Parameter Validation.Parameter targetDatabasename is empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter targetInstanceid is empty" name="Public/New-RubrikLogShipping.Parameter Validation.Parameter targetInstanceid is empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikManagedVolume.Tests.ps1" executed="True" result="Success" success="True" time="0.4482" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikManagedVolume.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikManagedVolume" executed="True" result="Success" success="True" time="0.148" asserts="0" description="Public/New-RubrikManagedVolume">
            <results>
              <test-suite type="TestFixture" name="Object Creation" executed="True" result="Success" success="True" time="0.1305" asserts="0" description="Object Creation">
                <results>
                  <test-case description="Should newly created managed volume" name="Public/New-RubrikManagedVolume.Object Creation.Should newly created managed volume" time="0.0591" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter name is required" name="Public/New-RubrikManagedVolume.Object Creation.Parameter name is required" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Channels is required" name="Public/New-RubrikManagedVolume.Object Creation.Parameter Channels is required" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ApplicationTag is correct" name="Public/New-RubrikManagedVolume.Object Creation.Parameter ApplicationTag is correct" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikManagedVolumeExport.Tests.ps1" executed="True" result="Success" success="True" time="0.4095" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikManagedVolumeExport.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikManagedVolumeExport" executed="True" result="Success" success="True" time="0.1049" asserts="0" description="Public/New-RubrikManagedVolumeExport">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0872" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Should newly created managed volume with QUEUED status" name="Public/New-RubrikManagedVolumeExport.Parameter Validation.Should newly created managed volume with QUEUED status" time="0.028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id is missing" name="Public/New-RubrikManagedVolumeExport.Parameter Validation.Parameter id is missing" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id is empty" name="Public/New-RubrikManagedVolumeExport.Parameter Validation.Parameter id is empty" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikMount.Tests.ps1" executed="True" result="Success" success="True" time="0.452" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikMount" executed="True" result="Success" success="True" time="0.1579" asserts="0" description="Public/New-RubrikMount">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.1365" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Should create mount with QUEUED status" name="Public/New-RubrikMount.Parameter Validation.Should create mount with QUEUED status" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id is missing" name="Public/New-RubrikMount.Parameter Validation.Parameter id is missing" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id is empty" name="Public/New-RubrikMount.Parameter Validation.Parameter id is empty" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validate Disable Network Boolean" name="Public/New-RubrikMount.Parameter Validation.Validate Disable Network Boolean" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validate Remove Network Devices Boolean" name="Public/New-RubrikMount.Parameter Validation.Validate Remove Network Devices Boolean" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validate PowerOn Boolean" name="Public/New-RubrikMount.Parameter Validation.Validate PowerOn Boolean" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikReport.Tests.ps1" executed="True" result="Success" success="True" time="0.4356" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikReport.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikReport" executed="True" result="Success" success="True" time="0.1469" asserts="0" description="Public/New-RubrikReport">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.0765" asserts="0" description="Returned Results">
                <results>
                  <test-case description="Returns newly created report" name="Public/New-RubrikReport.Returned Results.Returns newly created report" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Name cannot be null or empty" name="Public/New-RubrikReport.Parameter Validation.Name cannot be null or empty" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ReportTemplate must be present" name="Public/New-RubrikReport.Parameter Validation.ReportTemplate must be present" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ValidateSet ReportTemplate" name="Public/New-RubrikReport.Parameter Validation.ValidateSet ReportTemplate" time="0.0117" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikSLA.Tests.ps1" executed="True" result="Success" success="True" time="1.2206" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikSLA.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikSLA" executed="True" result="Success" success="True" time="0.9323" asserts="0" description="Public/New-RubrikSLA">
            <results>
              <test-suite type="TestFixture" name="Parameter/Name-v1" executed="True" result="Success" success="True" time="0.3958" asserts="0" description="Parameter/Name-v1">
                <results>
                  <test-case description="frequencies array should be populated" name="Public/New-RubrikSLA.Parameter/Name-v1.frequencies array should be populated" time="0.0673" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v1.hourly frequency set" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly retention set" name="Public/New-RubrikSLA.Parameter/Name-v1.hourly retention set" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily frequency set" name="Public/New-RubrikSLA.Parameter/Name-v1.daily frequency set" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily retention set" name="Public/New-RubrikSLA.Parameter/Name-v1.daily retention set" time="0.024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v1.weekly frequency set" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly retention set" name="Public/New-RubrikSLA.Parameter/Name-v1.weekly retention set" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v1.monthly frequency set" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly retention set" name="Public/New-RubrikSLA.Parameter/Name-v1.monthly retention set" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v1.yearly frequency set" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly retention set" name="Public/New-RubrikSLA.Parameter/Name-v1.yearly retention set" time="0.0198" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/Name-v2" executed="True" result="Success" success="True" time="0.4617" asserts="0" description="Parameter/Name-v2">
                <results>
                  <test-case description="hourly frequency exists" name="Public/New-RubrikSLA.Parameter/Name-v2.hourly frequency exists" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v2.hourly frequency set" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="hourly retention set" name="Public/New-RubrikSLA.Parameter/Name-v2.hourly retention set" time="0.0196" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily frequency exists" name="Public/New-RubrikSLA.Parameter/Name-v2.daily frequency exists" time="0.0198" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily frequency set" name="Public/New-RubrikSLA.Parameter/Name-v2.daily frequency set" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="daily retention set" name="Public/New-RubrikSLA.Parameter/Name-v2.daily retention set" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly frequency exists" name="Public/New-RubrikSLA.Parameter/Name-v2.weekly frequency exists" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v2.weekly frequency set" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="weekly retention set" name="Public/New-RubrikSLA.Parameter/Name-v2.weekly retention set" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly frequency exists" name="Public/New-RubrikSLA.Parameter/Name-v2.monthly frequency exists" time="0.0203" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v2.monthly frequency set" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="monthly retention set" name="Public/New-RubrikSLA.Parameter/Name-v2.monthly retention set" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly frequency exists" name="Public/New-RubrikSLA.Parameter/Name-v2.yearly frequency exists" time="0.0206" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly frequency set" name="Public/New-RubrikSLA.Parameter/Name-v2.yearly frequency set" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="yearly retention set" name="Public/New-RubrikSLA.Parameter/Name-v2.yearly retention set" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0487" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Name cannot be $null" name="Public/New-RubrikSLA.Parameter Validation.Parameter Name cannot be $null" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Name cannot be empty" name="Public/New-RubrikSLA.Parameter Validation.Parameter Name cannot be empty" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="SLA Paramters cannot be empty" name="Public/New-RubrikSLA.Parameter Validation.SLA Paramters cannot be empty" time="0.0122" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikSnapshot.Tests.ps1" executed="True" result="Success" success="True" time="0.546" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikSnapshot.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikSnapshot" executed="True" result="Success" success="True" time="0.2524" asserts="0" description="Public/New-RubrikSnapshot">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.2357" asserts="0" description="Parameters">
                <results>
                  <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0715" asserts="0" description="Parameter Validation">
                    <results>
                      <test-case description="Parameter id cannot be $null or empty" name="Public/New-RubrikSnapshot.Parameters.Parameter Validation.Parameter id cannot be $null or empty" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should issue warning" name="Public/New-RubrikSnapshot.Parameters.Parameter Validation.Should issue warning" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-case description="Should Return status of QUEUED" name="Public/New-RubrikSnapshot.Parameters.Should Return status of QUEUED" time="0.0733" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikUser.Tests.ps1" executed="True" result="Success" success="True" time="0.4452" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikUser.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikUser" executed="True" result="Success" success="True" time="0.1536" asserts="0" description="Public/New-RubrikUser">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.0977" asserts="0" description="Returned Results">
                <results>
                  <test-case description="User is created" name="Public/New-RubrikUser.Returned Results.User is created" time="0.0579" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.033" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Missing Username" name="Public/New-RubrikUser.Parameter Validation.Missing Username" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing Password" name="Public/New-RubrikUser.Parameter Validation.Missing Password" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikVMDKMount.Tests.ps1" executed="True" result="Success" success="True" time="0.5674" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikVMDKMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikVMDKMount" executed="True" result="Success" success="True" time="0.2685" asserts="0" description="Public/New-RubrikVMDKMount">
            <results>
              <test-suite type="TestFixture" name="Parameter/ID" executed="True" result="Success" success="True" time="0.1936" asserts="0" description="Parameter/ID">
                <results>
                  <test-case description="Status should be QUEUED" name="Public/New-RubrikVMDKMount.Parameter/ID.Status should be QUEUED" time="0.0834" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Mount request status should exist" name="Public/New-RubrikVMDKMount.Parameter/ID.Mount request status should exist" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0502" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter SnapshotID cannot be $null" name="Public/New-RubrikVMDKMount.Parameter Validation.Parameter SnapshotID cannot be $null" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter SnapshotID cannot be empty" name="Public/New-RubrikVMDKMount.Parameter Validation.Parameter SnapshotID cannot be empty" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter TargetVM cannot be $null" name="Public/New-RubrikVMDKMount.Parameter Validation.Parameter TargetVM cannot be $null" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter TargetVM cannot be empty" name="Public/New-RubrikVMDKMount.Parameter Validation.Parameter TargetVM cannot be empty" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\New-RubrikVolumeGroupMount.Tests.ps1" executed="True" result="Success" success="True" time="0.4472" asserts="0" description="C:\projects\powershell-module\tests\New-RubrikVolumeGroupMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/New-RubrikVolumeGroupMount" executed="True" result="Success" success="True" time="0.1555" asserts="0" description="Public/New-RubrikVolumeGroupMount">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.1387" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Should newly created Volume Group Mount task with QUEUED status" name="Public/New-RubrikVolumeGroupMount.Parameter Validation.Should newly created Volume Group Mount task with QUEUED status" time="0.0581" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter TargetHost is missing" name="Public/New-RubrikVolumeGroupMount.Parameter Validation.Parameter TargetHost is missing" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter VolumeGroupSnapshot is missing" name="Public/New-RubrikVolumeGroupMount.Parameter Validation.Parameter VolumeGroupSnapshot is missing" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter TargetHost is empty" name="Public/New-RubrikVolumeGroupMount.Parameter Validation.Parameter TargetHost is empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Protect-RubrikDatabase.Tests.ps1" executed="True" result="Success" success="True" time="0.5009" asserts="0" description="C:\projects\powershell-module\tests\Protect-RubrikDatabase.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Protect-RubrikDatabase" executed="True" result="Success" success="True" time="0.2094" asserts="0" description="Public/Protect-RubrikDatabase">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.1245" asserts="0" description="Parameters">
                <results>
                  <test-case description="Verify results match expected values" name="Public/Protect-RubrikDatabase.Parameters.Verify results match expected values" time="0.0679" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0637" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Protect-RubrikDatabase.Parameter Validation.Parameter ID cannot be $null" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Protect-RubrikDatabase.Parameter Validation.Parameter ID cannot be empty" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and DoNotProtect cannot be simultaneously used" name="Public/Protect-RubrikDatabase.Parameter Validation.Parameters SLA and DoNotProtect cannot be simultaneously used" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and Inherit cannot be simultaneously used" name="Public/Protect-RubrikDatabase.Parameter Validation.Parameters SLA and Inherit cannot be simultaneously used" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters DoNotProtect and Inherit cannot be simultaneously used" name="Public/Protect-RubrikDatabase.Parameter Validation.Parameters DoNotProtect and Inherit cannot be simultaneously used" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Protect-RubrikFileset.Tests.ps1" executed="True" result="Success" success="True" time="0.4574" asserts="0" description="C:\projects\powershell-module\tests\Protect-RubrikFileset.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Protect-RubrikFileset" executed="True" result="Success" success="True" time="0.1513" asserts="0" description="Public/Protect-RubrikFileset">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.0948" asserts="0" description="Returned Results">
                <results>
                  <test-case description="Fileset assigned to SLA Domain" name="Public/Protect-RubrikFileset.Returned Results.Fileset assigned to SLA Domain" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0323" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="ID cannot be null" name="Public/Protect-RubrikFileset.Parameter Validation.ID cannot be null" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Missing SLA" name="Public/Protect-RubrikFileset.Parameter Validation.Missing SLA" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Protect-RubrikHyperVVM.Tests.ps1" executed="True" result="Success" success="True" time="0.6153" asserts="0" description="C:\projects\powershell-module\tests\Protect-RubrikHyperVVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Protect-RubrikHyperVVM" executed="True" result="Success" success="True" time="0.33" asserts="0" description="Public/Protect-RubrikHyperVVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.0888" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="Should assign SLA" name="Public/Protect-RubrikHyperVVM.Parameter/SLA.Should assign SLA" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/DoNotProtect" executed="True" result="Success" success="True" time="0.0728" asserts="0" description="Parameter/DoNotProtect">
                <results>
                  <test-case description="Should be Unprotected" name="Public/Protect-RubrikHyperVVM.Parameter/DoNotProtect.Should be Unprotected" time="0.0268" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/Inherit" executed="True" result="Success" success="True" time="0.0759" asserts="0" description="Parameter/Inherit">
                <results>
                  <test-case description="Should be Inherited" name="Public/Protect-RubrikHyperVVM.Parameter/Inherit.Should be Inherited" time="0.0286" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0641" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Protect-RubrikHyperVVM.Parameter Validation.Parameter ID cannot be $null" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Protect-RubrikHyperVVM.Parameter Validation.Parameter ID cannot be empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and DoNotProtect cannot be simultaneously used" name="Public/Protect-RubrikHyperVVM.Parameter Validation.Parameters SLA and DoNotProtect cannot be simultaneously used" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and Inherit cannot be simultaneously used" name="Public/Protect-RubrikHyperVVM.Parameter Validation.Parameters SLA and Inherit cannot be simultaneously used" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters DoNotProtect and Inherit cannot be simultaneously used" name="Public/Protect-RubrikHyperVVM.Parameter Validation.Parameters DoNotProtect and Inherit cannot be simultaneously used" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Protect-RubrikNutanixVM.Tests.ps1" executed="True" result="Success" success="True" time="0.6399" asserts="0" description="C:\projects\powershell-module\tests\Protect-RubrikNutanixVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Protect-RubrikNutanixVM" executed="True" result="Success" success="True" time="0.3293" asserts="0" description="Public/Protect-RubrikNutanixVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.0893" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="Should assign SLA" name="Public/Protect-RubrikNutanixVM.Parameter/SLA.Should assign SLA" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/DoNotProtect" executed="True" result="Success" success="True" time="0.0717" asserts="0" description="Parameter/DoNotProtect">
                <results>
                  <test-case description="Should be Unprotected" name="Public/Protect-RubrikNutanixVM.Parameter/DoNotProtect.Should be Unprotected" time="0.0257" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/Inherit" executed="True" result="Success" success="True" time="0.0737" asserts="0" description="Parameter/Inherit">
                <results>
                  <test-case description="Should be Inherited" name="Public/Protect-RubrikNutanixVM.Parameter/Inherit.Should be Inherited" time="0.0275" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0583" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Protect-RubrikNutanixVM.Parameter Validation.Parameter ID cannot be $null" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Protect-RubrikNutanixVM.Parameter Validation.Parameter ID cannot be empty" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and DoNotProtect cannot be simultaneously used" name="Public/Protect-RubrikNutanixVM.Parameter Validation.Parameters SLA and DoNotProtect cannot be simultaneously used" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and Inherit cannot be simultaneously used" name="Public/Protect-RubrikNutanixVM.Parameter Validation.Parameters SLA and Inherit cannot be simultaneously used" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters DoNotProtect and Inherit cannot be simultaneously used" name="Public/Protect-RubrikNutanixVM.Parameter Validation.Parameters DoNotProtect and Inherit cannot be simultaneously used" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Protect-RubrikTag.Tests.ps1" executed="True" result="Success" success="True" time="0.4097" asserts="0" description="C:\projects\powershell-module\tests\Protect-RubrikTag.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Protect-RubrikTag" executed="True" result="Success" success="True" time="0.0893" asserts="0" description="Public/Protect-RubrikTag">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0688" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Tag is mandatory" name="Public/Protect-RubrikTag.Parameter Validation.Parameter Tag is mandatory" time="0.0205" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Category is mandatory" name="Public/Protect-RubrikTag.Parameter Validation.Parameter Category is mandatory" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Tag is null or empty" name="Public/Protect-RubrikTag.Parameter Validation.Parameter Tag is null or empty" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Category is null or empty" name="Public/Protect-RubrikTag.Parameter Validation.Parameter Category is null or empty" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Protect-RubrikVM.Tests.ps1" executed="True" result="Success" success="True" time="0.7179" asserts="0" description="C:\projects\powershell-module\tests\Protect-RubrikVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Protect-RubrikVM" executed="True" result="Success" success="True" time="0.3411" asserts="0" description="Public/Protect-RubrikVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/SLA" executed="True" result="Success" success="True" time="0.0975" asserts="0" description="Parameter/SLA">
                <results>
                  <test-case description="Should assign SLA" name="Public/Protect-RubrikVM.Parameter/SLA.Should assign SLA" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/DoNotProtect" executed="True" result="Success" success="True" time="0.0767" asserts="0" description="Parameter/DoNotProtect">
                <results>
                  <test-case description="Should be Unprotected" name="Public/Protect-RubrikVM.Parameter/DoNotProtect.Should be Unprotected" time="0.0239" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/Inherit" executed="True" result="Success" success="True" time="0.0762" asserts="0" description="Parameter/Inherit">
                <results>
                  <test-case description="Should be Inherited" name="Public/Protect-RubrikVM.Parameter/Inherit.Should be Inherited" time="0.0274" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0605" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Protect-RubrikVM.Parameter Validation.Parameter ID cannot be $null" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Protect-RubrikVM.Parameter Validation.Parameter ID cannot be empty" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and DoNotProtect cannot be simultaneously used" name="Public/Protect-RubrikVM.Parameter Validation.Parameters SLA and DoNotProtect cannot be simultaneously used" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and Inherit cannot be simultaneously used" name="Public/Protect-RubrikVM.Parameter Validation.Parameters SLA and Inherit cannot be simultaneously used" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters DoNotProtect and Inherit cannot be simultaneously used" name="Public/Protect-RubrikVM.Parameter Validation.Parameters DoNotProtect and Inherit cannot be simultaneously used" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikAPIToken.Tests.ps1" executed="True" result="Success" success="True" time="0.3598" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikAPIToken.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikAPIToken" executed="True" result="Success" success="True" time="0.0544" asserts="0" description="Public/Remove-RubrikAPIToken">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0331" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter TokenId cannot be $null" name="Public/Remove-RubrikAPIToken.Parameter Validation.Parameter TokenId cannot be $null" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter TokenId cannot be empty" name="Public/Remove-RubrikAPIToken.Parameter Validation.Parameter TokenId cannot be empty" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikDatabaseMount.Tests.ps1" executed="True" result="Success" success="True" time="0.4204" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikDatabaseMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikDatabaseMount" executed="True" result="Success" success="True" time="0.1308" asserts="0" description="Public/Remove-RubrikDatabaseMount">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.0727" asserts="0" description="Parameters">
                <results>
                  <test-case description="Should return status of queued" name="Public/Remove-RubrikDatabaseMount.Parameters.Should return status of queued" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0344" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Remove-RubrikDatabaseMount.Parameter Validation.Parameter ID cannot be $null" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Remove-RubrikDatabaseMount.Parameter Validation.Parameter ID cannot be empty" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikFileset.Tests.ps1" executed="True" result="Success" success="True" time="0.4183" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikFileset.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikFileset" executed="True" result="Success" success="True" time="0.1261" asserts="0" description="Public/Remove-RubrikFileset">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.0715" asserts="0" description="Returned Results">
                <results>
                  <test-case description="HTTPStatusCode is 204" name="Public/Remove-RubrikFileset.Returned Results.HTTPStatusCode is 204" time="0.0271" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0338" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter id cannot be $null" name="Public/Remove-RubrikFileset.Parameter Validation.Parameter id cannot be $null" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id missing" name="Public/Remove-RubrikFileset.Parameter Validation.Parameter id missing" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikLogShipping.Tests.ps1" executed="True" result="Success" success="True" time="0.4329" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikLogShipping.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikLogShipping" executed="True" result="Success" success="True" time="0.1236" asserts="0" description="Public/Remove-RubrikLogShipping">
            <results>
              <test-suite type="TestFixture" name="Results" executed="True" result="Success" success="True" time="0.0741" asserts="0" description="Results">
                <results>
                  <test-case description="Should return status of queued" name="Public/Remove-RubrikLogShipping.Results.Should return status of queued" time="0.0304" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0303" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Remove-RubrikLogShipping.Parameter Validation.Parameter ID cannot be $null" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Remove-RubrikLogShipping.Parameter Validation.Parameter ID cannot be empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikManagedVolume.Tests.ps1" executed="True" result="Success" success="True" time="0.3481" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikManagedVolume.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikManagedVolume" executed="True" result="Success" success="True" time="0.056" asserts="0" description="Public/Remove-RubrikManagedVolume">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0341" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter id cannot be $null" name="Public/Remove-RubrikManagedVolume.Parameter Validation.Parameter id cannot be $null" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id cannot be empty" name="Public/Remove-RubrikManagedVolume.Parameter Validation.Parameter id cannot be empty" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikManagedVolumeExport.Tests.ps1" executed="True" result="Success" success="True" time="0.3467" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikManagedVolumeExport.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikManagedVolumeExport" executed="True" result="Success" success="True" time="0.0582" asserts="0" description="Public/Remove-RubrikManagedVolumeExport">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter id cannot be $null" name="Public/Remove-RubrikManagedVolumeExport.Parameter Validation.Parameter id cannot be $null" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id cannot be empty" name="Public/Remove-RubrikManagedVolumeExport.Parameter Validation.Parameter id cannot be empty" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikMount.Tests.ps1" executed="True" result="Success" success="True" time="0.4021" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikMount" executed="True" result="Success" success="True" time="0.1074" asserts="0" description="Public/Remove-RubrikMount">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0873" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Should remove mount with QUEUED" name="Public/Remove-RubrikMount.Parameter Validation.Should remove mount with QUEUED" time="0.0257" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id is missing" name="Public/Remove-RubrikMount.Parameter Validation.Parameter id is missing" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id is empty" name="Public/Remove-RubrikMount.Parameter Validation.Parameter id is empty" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikReport.Tests.ps1" executed="True" result="Success" success="True" time="0.4421" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikReport.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikReport" executed="True" result="Success" success="True" time="0.148" asserts="0" description="Public/Remove-RubrikReport">
            <results>
              <test-suite type="TestFixture" name="Returning results" executed="True" result="Success" success="True" time="0.0992" asserts="0" description="Returning results">
                <results>
                  <test-case description="Should Return status of Success" name="Public/Remove-RubrikReport.Returning results.Should Return status of Success" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return HTTP status code 204" name="Public/Remove-RubrikReport.Returning results.Should Return HTTP status code 204" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0202" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null or empty" name="Public/Remove-RubrikReport.Parameter Validation.Parameter ID cannot be $null or empty" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikSLA.Tests.ps1" executed="True" result="Success" success="True" time="0.5235" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikSLA.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikSLA" executed="True" result="Success" success="True" time="0.2416" asserts="0" description="Public/Remove-RubrikSLA">
            <results>
              <test-suite type="TestFixture" name="Parameter/ID-v1" executed="True" result="Success" success="True" time="0.098" asserts="0" description="Parameter/ID-v1">
                <results>
                  <test-case description="Should Return status of Success" name="Public/Remove-RubrikSLA.Parameter/ID-v1.Should Return status of Success" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return HTTP status code 204" name="Public/Remove-RubrikSLA.Parameter/ID-v1.Should Return HTTP status code 204" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/ID-v2" executed="True" result="Success" success="True" time="0.0946" asserts="0" description="Parameter/ID-v2">
                <results>
                  <test-case description="Should Return status of Success" name="Public/Remove-RubrikSLA.Parameter/ID-v2.Should Return status of Success" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return HTTP status code 204" name="Public/Remove-RubrikSLA.Parameter/ID-v2.Should Return HTTP status code 204" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.021" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null or empty" name="Public/Remove-RubrikSLA.Parameter Validation.Parameter ID cannot be $null or empty" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikUnmanagedObject.Tests.ps1" executed="True" result="Success" success="True" time="0.3375" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikUnmanagedObject.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikUnmanagedObject" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Public/Remove-RubrikUnmanagedObject">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0211" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="ID Missing" name="Public/Remove-RubrikUnmanagedObject.Parameter Validation.ID Missing" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikUser.Tests.ps1" executed="True" result="Success" success="True" time="0.4078" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikUser.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikUser" executed="True" result="Success" success="True" time="0.1176" asserts="0" description="Public/Remove-RubrikUser">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.0728" asserts="0" description="Returned Results">
                <results>
                  <test-case description="User removed" name="Public/Remove-RubrikUser.Returned Results.User removed" time="0.0306" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0197" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="ID Missing" name="Public/Remove-RubrikUser.Parameter Validation.ID Missing" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikVMSnapshot.Tests.ps1" executed="True" result="Success" success="True" time="0.4337" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikVMSnapshot.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikVMSnapshot" executed="True" result="Success" success="True" time="0.1483" asserts="0" description="Public/Remove-RubrikVMSnapshot">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.1286" asserts="0" description="Parameters">
                <results>
                  <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0258" asserts="0" description="Parameter Validation">
                    <results>
                      <test-case description="Parameter id cannot be $null or empty" name="Public/Remove-RubrikVMSnapshot.Parameters.Parameter Validation.Parameter id cannot be $null or empty" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-case description="Should Return status of Success" name="Public/Remove-RubrikVMSnapshot.Parameters.Should Return status of Success" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Return HTTP status code 204" name="Public/Remove-RubrikVMSnapshot.Parameters.Should Return HTTP status code 204" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Remove-RubrikVolumeGroupMount.Tests.ps1" executed="True" result="Success" success="True" time="0.3515" asserts="0" description="C:\projects\powershell-module\tests\Remove-RubrikVolumeGroupMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Remove-RubrikVolumeGroupMount" executed="True" result="Success" success="True" time="0.0582" asserts="0" description="Public/Remove-RubrikVolumeGroupMount">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0359" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter id cannot be $null" name="Public/Remove-RubrikVolumeGroupMount.Parameter Validation.Parameter id cannot be $null" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter id cannot be empty" name="Public/Remove-RubrikVolumeGroupMount.Parameter Validation.Parameter id cannot be empty" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Reset-RubrikLogShipping.Tests.ps1" executed="True" result="Success" success="True" time="0.4286" asserts="0" description="C:\projects\powershell-module\tests\Reset-RubrikLogShipping.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Reset-RubrikLogShipping" executed="True" result="Success" success="True" time="0.1317" asserts="0" description="Public/Reset-RubrikLogShipping">
            <results>
              <test-suite type="TestFixture" name="Request Succeeds" executed="True" result="Success" success="True" time="0.0725" asserts="0" description="Request Succeeds">
                <results>
                  <test-case description="Should return status of QUEUED" name="Public/Reset-RubrikLogShipping.Request Succeeds.Should return status of QUEUED" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be null" name="Public/Reset-RubrikLogShipping.Parameter Validation.Parameter ID cannot be null" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Reset-RubrikLogShipping.Parameter Validation.Parameter ID cannot be empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validate parameter set state" name="Public/Reset-RubrikLogShipping.Parameter Validation.Validate parameter set state" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Restore-RubrikDatabase.Tests.ps1" executed="True" result="Success" success="True" time="0.4896" asserts="0" description="C:\projects\powershell-module\tests\Restore-RubrikDatabase.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Restore-RubrikDatabase" executed="True" result="Success" success="True" time="0.2008" asserts="0" description="Public/Restore-RubrikDatabase">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.0801" asserts="0" description="Parameters">
                <results>
                  <test-case description="Should return status of queued" name="Public/Restore-RubrikDatabase.Parameters.Should return status of queued" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.1015" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID must be specified" name="Public/Restore-RubrikDatabase.Parameter Validation.Parameter ID must be specified" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be $null or empty" name="Public/Restore-RubrikDatabase.Parameter Validation.Parameter ID cannot be $null or empty" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Restore-RubrikDatabase.Parameter Validation.Parameter ID cannot be empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Check for required parameters" name="Public/Restore-RubrikDatabase.Parameter Validation.Check for required parameters" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters TimestampMs and RecoveryDateTime cannot be simultaneously used" name="Public/Restore-RubrikDatabase.Parameter Validation.Parameters TimestampMs and RecoveryDateTime cannot be simultaneously used" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters TimestampMs and RecoveryLSN cannot be simultaneously used" name="Public/Restore-RubrikDatabase.Parameter Validation.Parameters TimestampMs and RecoveryLSN cannot be simultaneously used" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters RecoveryLSN and RecoveryDateTime cannot be simultaneously used" name="Public/Restore-RubrikDatabase.Parameter Validation.Parameters RecoveryLSN and RecoveryDateTime cannot be simultaneously used" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="RecoveryDateTime must be a date." name="Public/Restore-RubrikDatabase.Parameter Validation.RecoveryDateTime must be a date." time="0.005" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikAvailabilityGroup.Tests.ps1" executed="True" result="Success" success="True" time="0.4418" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikAvailabilityGroup.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikAvailabilityGroup" executed="True" result="Success" success="True" time="0.1565" asserts="0" description="Public/Set-RubrikAvailabilityGroup">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.0952" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should return AG1" name="Public/Set-RubrikAvailabilityGroup.Results Filtering.Should return AG1" time="0.0465" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter id missing" name="Public/Set-RubrikAvailabilityGroup.Parameter Validation.Parameter id missing" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter LogBackupFrequencyInSeconds is integer" name="Public/Set-RubrikAvailabilityGroup.Parameter Validation.Parameter LogBackupFrequencyInSeconds is integer" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter LogRetentionHours is integer" name="Public/Set-RubrikAvailabilityGroup.Parameter Validation.Parameter LogRetentionHours is integer" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikBlackout.Tests.ps1" executed="True" result="Success" success="True" time="0.3761" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikBlackout.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikBlackout" executed="True" result="Success" success="True" time="0.0882" asserts="0" description="Public/Set-RubrikBlackout">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.071" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should return true" name="Public/Set-RubrikBlackout.Results Filtering.Should return true" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikDatabase.Tests.ps1" executed="True" result="Success" success="True" time="0.4889" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikDatabase.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikDatabase" executed="True" result="Success" success="True" time="0.1976" asserts="0" description="Public/Set-RubrikDatabase">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.1339" asserts="0" description="Parameters">
                <results>
                  <test-case description="Verify results match expected values" name="Public/Set-RubrikDatabase.Parameters.Verify results match expected values" time="0.0818" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Set-RubrikDatabase.Parameter Validation.Parameter ID cannot be $null" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Set-RubrikDatabase.Parameter Validation.Parameter ID cannot be empty" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameters SLA and SLAID cannot be simultaneously used" name="Public/Set-RubrikDatabase.Parameter Validation.Parameters SLA and SLAID cannot be simultaneously used" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikHyperVVM.Tests.ps1" executed="True" result="Success" success="True" time="0.3396" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikHyperVVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikHyperVVM" executed="True" result="Success" success="True" time="0.0521" asserts="0" description="Public/Set-RubrikHyperVVM">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0357" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Set-RubrikHyperVVM.Parameter Validation.Parameter ID cannot be $null" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Set-RubrikHyperVVM.Parameter Validation.Parameter ID cannot be empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikLogShipping.Tests.ps1" executed="True" result="Success" success="True" time="0.4775" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikLogShipping.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikLogShipping" executed="True" result="Success" success="True" time="0.1917" asserts="0" description="Public/Set-RubrikLogShipping">
            <results>
              <test-suite type="TestFixture" name="Request Succeeds" executed="True" result="Success" success="True" time="0.1315" asserts="0" description="Request Succeeds">
                <results>
                  <test-case description="Should return status of QUEUED" name="Public/Set-RubrikLogShipping.Request Succeeds.Should return status of QUEUED" time="0.0304" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return correct id" name="Public/Set-RubrikLogShipping.Request Succeeds.Should return correct id" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return correct progress" name="Public/Set-RubrikLogShipping.Request Succeeds.Should return correct progress" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be null" name="Public/Set-RubrikLogShipping.Parameter Validation.Parameter ID cannot be null" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Set-RubrikLogShipping.Parameter Validation.Parameter ID cannot be empty" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validate parameter set state" name="Public/Set-RubrikLogShipping.Parameter Validation.Validate parameter set state" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikManagedVolume.Tests.ps1" executed="True" result="Success" success="True" time="0.4686" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikManagedVolume.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikManagedVolume" executed="True" result="Success" success="True" time="0.1768" asserts="0" description="Public/Set-RubrikManagedVolume">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.1571" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Request Fulfilled VolumeSize" name="Public/Set-RubrikManagedVolume.Parameter Validation.Request Fulfilled VolumeSize" time="0.0338" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Request Fulfilled SLA" name="Public/Set-RubrikManagedVolume.Parameter Validation.Request Fulfilled SLA" time="0.0269" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be $null" name="Public/Set-RubrikManagedVolume.Parameter Validation.Parameter ID cannot be $null" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Set-RubrikManagedVolume.Parameter Validation.Parameter ID cannot be empty" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Volume Size is integer" name="Public/Set-RubrikManagedVolume.Parameter Validation.Volume Size is integer" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Name cannot be null or empty" name="Public/Set-RubrikManagedVolume.Parameter Validation.Name cannot be null or empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikMount.Tests.ps1" executed="True" result="Success" success="True" time="0.4275" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikMount.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikMount" executed="True" result="Success" success="True" time="0.1304" asserts="0" description="Public/Set-RubrikMount">
            <results>
              <test-suite type="TestFixture" name="Results Filtering" executed="True" result="Success" success="True" time="0.1131" asserts="0" description="Results Filtering">
                <results>
                  <test-case description="Should return poweredOff status" name="Public/Set-RubrikMount.Results Filtering.Should return poweredOff status" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be $null" name="Public/Set-RubrikMount.Results Filtering.Parameter ID cannot be $null" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Set-RubrikMount.Results Filtering.Parameter ID cannot be empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validate PowerOn Boolean" name="Public/Set-RubrikMount.Results Filtering.Validate PowerOn Boolean" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikNutanixVM.Tests.ps1" executed="True" result="Success" success="True" time="0.5251" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikNutanixVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikNutanixVM" executed="True" result="Success" success="True" time="0.2148" asserts="0" description="Public/Set-RubrikNutanixVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/PauseBackups" executed="True" result="Success" success="True" time="0.0863" asserts="0" description="Parameter/PauseBackups">
                <results>
                  <test-case description="Should set PauseBackups" name="Public/Set-RubrikNutanixVM.Parameter/PauseBackups.Should set PauseBackups" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/SnapConsistency" executed="True" result="Success" success="True" time="0.0642" asserts="0" description="Parameter/SnapConsistency">
                <results>
                  <test-case description="Should set SnapConsistency" name="Public/Set-RubrikNutanixVM.Parameter/SnapConsistency.Should set SnapConsistency" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Set-RubrikNutanixVM.Parameter Validation.Parameter ID cannot be $null" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Set-RubrikNutanixVM.Parameter Validation.Parameter ID cannot be empty" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter SnapConsistency must have a valid value" name="Public/Set-RubrikNutanixVM.Parameter Validation.Parameter SnapConsistency must have a valid value" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikSQLInstance.Tests.ps1" executed="True" result="Success" success="True" time="0.6369" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikSQLInstance.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikSQLInstance" executed="True" result="Success" success="True" time="0.3275" asserts="0" description="Public/Set-RubrikSQLInstance">
            <results>
              <test-suite type="TestFixture" name="Parameters" executed="True" result="Success" success="True" time="0.2725" asserts="0" description="Parameters">
                <results>
                  <test-case description="verify name" name="Public/Set-RubrikSQLInstance.Parameters.verify name" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify ID" name="Public/Set-RubrikSQLInstance.Parameters.verify ID" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify SLA name" name="Public/Set-RubrikSQLInstance.Parameters.verify SLA name" time="0.0231" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify SLA ID" name="Public/Set-RubrikSQLInstance.Parameters.verify SLA ID" time="0.0237" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify logBackupFrequencyInSeconds" name="Public/Set-RubrikSQLInstance.Parameters.verify logBackupFrequencyInSeconds" time="0.0207" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify logRetentionHours" name="Public/Set-RubrikSQLInstance.Parameters.verify logRetentionHours" time="0.0205" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="verify copyOnly" name="Public/Set-RubrikSQLInstance.Parameters.verify copyOnly" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.031" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Set-RubrikSQLInstance.Parameter Validation.Parameter ID cannot be $null" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Set-RubrikSQLInstance.Parameter Validation.Parameter ID cannot be empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikSupportTunnel.Tests.ps1" executed="True" result="Success" success="True" time="0.42" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikSupportTunnel.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikSupportTunnel" executed="True" result="Success" success="True" time="0.1276" asserts="0" description="Public/Set-RubrikSupportTunnel">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.1065" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Enabling Tunnel" name="Public/Set-RubrikSupportTunnel.Parameter Validation.Enabling Tunnel" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter EnableTunnel cannot be $null" name="Public/Set-RubrikSupportTunnel.Parameter Validation.Parameter EnableTunnel cannot be $null" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter EnableTunnel must be specified" name="Public/Set-RubrikSupportTunnel.Parameter Validation.Parameter EnableTunnel must be specified" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikUser.Tests.ps1" executed="True" result="Success" success="True" time="0.4336" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikUser.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikUser" executed="True" result="Success" success="True" time="0.1363" asserts="0" description="Public/Set-RubrikUser">
            <results>
              <test-suite type="TestFixture" name="Returned Results" executed="True" result="Success" success="True" time="0.072" asserts="0" description="Returned Results">
                <results>
                  <test-case description="User is updated" name="Public/Set-RubrikUser.Returned Results.User is updated" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0329" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="ID Missing" name="Public/Set-RubrikUser.Parameter Validation.ID Missing" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Password must be System.SecureString" name="Public/Set-RubrikUser.Parameter Validation.Password must be System.SecureString" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Set-RubrikVM.Tests.ps1" executed="True" result="Success" success="True" time="0.5457" asserts="0" description="C:\projects\powershell-module\tests\Set-RubrikVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Set-RubrikVM" executed="True" result="Success" success="True" time="0.2423" asserts="0" description="Public/Set-RubrikVM">
            <results>
              <test-suite type="TestFixture" name="Parameter/PauseBackups" executed="True" result="Success" success="True" time="0.0967" asserts="0" description="Parameter/PauseBackups">
                <results>
                  <test-case description="Should set PauseBackups" name="Public/Set-RubrikVM.Parameter/PauseBackups.Should set PauseBackups" time="0.0562" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter/SnapConsistency" executed="True" result="Success" success="True" time="0.0693" asserts="0" description="Parameter/SnapConsistency">
                <results>
                  <test-case description="Should set SnapConsistency" name="Public/Set-RubrikVM.Parameter/SnapConsistency.Should set SnapConsistency" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0526" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be $null" name="Public/Set-RubrikVM.Parameter Validation.Parameter ID cannot be $null" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Set-RubrikVM.Parameter Validation.Parameter ID cannot be empty" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter SnapConsistency must have a valid value" name="Public/Set-RubrikVM.Parameter Validation.Parameter SnapConsistency must have a valid value" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter MaxNestedSnapshots must have a valid value" name="Public/Set-RubrikVM.Parameter Validation.Parameter MaxNestedSnapshots must have a valid value" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Start-RubrikManagedVolumeSnapshot.Tests.ps1" executed="True" result="Success" success="True" time="0.3999" asserts="0" description="C:\projects\powershell-module\tests\Start-RubrikManagedVolumeSnapshot.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Start-RubrikManagedVolumeSnapshot" executed="True" result="Success" success="True" time="0.1008" asserts="0" description="Public/Start-RubrikManagedVolumeSnapshot">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0808" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Request Fulfilled" name="Public/Start-RubrikManagedVolumeSnapshot.Parameter Validation.Request Fulfilled" time="0.0309" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID must be present" name="Public/Start-RubrikManagedVolumeSnapshot.Parameter Validation.Parameter ID must be present" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Stop-RubrikManagedVolumeSnapshot.Tests.ps1" executed="True" result="Success" success="True" time="0.4025" asserts="0" description="C:\projects\powershell-module\tests\Stop-RubrikManagedVolumeSnapshot.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Stop-RubrikManagedVolumeSnapshot" executed="True" result="Success" success="True" time="0.1018" asserts="0" description="Public/Stop-RubrikManagedVolumeSnapshot">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0851" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Request Fulfilled" name="Public/Stop-RubrikManagedVolumeSnapshot.Parameter Validation.Request Fulfilled" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID must be present" name="Public/Stop-RubrikManagedVolumeSnapshot.Parameter Validation.Parameter ID must be present" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Submit-Request.Tests.ps1" executed="True" result="Success" success="True" time="2.2223" asserts="0" description="C:\projects\powershell-module\tests\Submit-Request.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Private/Submit-Request" executed="True" result="Success" success="True" time="1.9237" asserts="0" description="Private/Submit-Request">
            <results>
              <test-suite type="TestFixture" name="Method:Delete-Success/Error" executed="True" result="Success" success="True" time="0.1087" asserts="0" description="Method:Delete-Success/Error">
                <results>
                  <test-case description="Status:Success" name="Private/Submit-Request.Method:Delete-Success/Error.Status:Success" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Status:Error" name="Private/Submit-Request.Method:Delete-Success/Error.Status:Error" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Method:Other-EventObject" executed="True" result="Success" success="True" time="0.4522" asserts="0" description="Method:Other-EventObject">
                <results>
                  <test-suite type="ParameterizedTest" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify &lt;Property&gt; Property" executed="True" result="Success" success="True" time="0.3203" asserts="0" description="Parse as PowerShell - Event Objects - Verify &lt;Property&gt; Property">
                    <results>
                      <test-case description="Parse as PowerShell - Event Objects - Verify id Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify id Property" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify objectId Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify objectId Property" time="0.0297" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify objectType Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify objectType Property" time="0.0253" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify objectName Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify objectName Property" time="0.0255" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify eventInfo Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify eventInfo Property" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify time Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify time Property" time="0.0255" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify eventType Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify eventType Property" time="0.0251" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify eventStatus Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify eventStatus Property" time="0.0288" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify eventSeriesId Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify eventSeriesId Property" time="0.026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify relatedIds Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify relatedIds Property" time="0.0262" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - Event Objects - Verify jobInstanceId Property" name="Private/Submit-Request.Method:Other-EventObject.Parse as PowerShell - Event Objects - Verify jobInstanceId Property" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Method:Other-SLAObject" executed="True" result="Success" success="True" time="1.2886" asserts="0" description="Method:Other-SLAObject">
                <results>
                  <test-suite type="ParameterizedTest" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify &lt;Property&gt; Property" executed="True" result="Success" success="True" time="1.016" asserts="0" description="Parse as PowerShell - SLA Object - Verify &lt;Property&gt; Property">
                    <results>
                      <test-case description="Parse as PowerShell - SLA Object - Verify id Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify id Property" time="0.03" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify primaryClusterId Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify primaryClusterId Property" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify name Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify name Property" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify polarisManagedId Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify polarisManagedId Property" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify frequencies Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify frequencies Property" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify allowedBackupWindows Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify allowedBackupWindows Property" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify firstFullAllowedBackupWindows Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify firstFullAllowedBackupWindows Property" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify maxLocalRetentionLimit Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify maxLocalRetentionLimit Property" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify archivalSpecs Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify archivalSpecs Property" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify replicationSpecs Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify replicationSpecs Property" time="0.0276" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numDbs Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numDbs Property" time="0.0281" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numOracleDbs Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numOracleDbs Property" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numFilesets Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numFilesets Property" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numHypervVms Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numHypervVms Property" time="0.0285" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numNutanixVms Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numNutanixVms Property" time="0.0283" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numManagedVolumes Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numManagedVolumes Property" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numStorageArrayVolumeGroups Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numStorageArrayVolumeGroups Property" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numWindowsVolumeGroups Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numWindowsVolumeGroups Property" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numLinuxHosts Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numLinuxHosts Property" time="0.0283" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numShares Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numShares Property" time="0.0879" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numWindowsHosts Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numWindowsHosts Property" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numVms Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numVms Property" time="0.0785" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numEc2Instances Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numEc2Instances Property" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numVcdVapps Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numVcdVapps Property" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify numProtectedObjects Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify numProtectedObjects Property" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify isDefault Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify isDefault Property" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify uiColor Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify uiColor Property" time="0.0277" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify showAdvancedUi Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify showAdvancedUi Property" time="0.0279" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Parse as PowerShell - SLA Object - Verify advancedUiConfig Property" name="Private/Submit-Request.Method:Other-SLAObject.Parse as PowerShell - SLA Object - Verify advancedUiConfig Property" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Error:Route not defined" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Error:Route not defined">
                <results>
                  <test-case description="Should throw - Route not defined." name="Private/Submit-Request.Error:Route not defined.Should throw - Route not defined." time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Sync-RubrikAnnotation.Tests.ps1" executed="True" result="Success" success="True" time="0.3446" asserts="0" description="C:\projects\powershell-module\tests\Sync-RubrikAnnotation.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Sync-RubrikAnnotation" executed="True" result="Success" success="True" time="0.0552" asserts="0" description="Public/Sync-RubrikAnnotation">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0352" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter Name cannot be $null" name="Public/Sync-RubrikAnnotation.Parameter Validation.Parameter Name cannot be $null" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter Name cannot be empty" name="Public/Sync-RubrikAnnotation.Parameter Validation.Parameter Name cannot be empty" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Sync-RubrikTag.Tests.ps1" executed="True" result="Success" success="True" time="0.3418" asserts="0" description="C:\projects\powershell-module\tests\Sync-RubrikTag.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Sync-RubrikTag" executed="True" result="Success" success="True" time="0.0527" asserts="0" description="Public/Sync-RubrikTag">
            <results>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter category cannot be null or empty" name="Public/Sync-RubrikTag.Parameter Validation.Parameter category cannot be null or empty" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter category missing" name="Public/Sync-RubrikTag.Parameter Validation.Parameter category missing" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Update-RubrikHost.Tests.ps1" executed="True" result="Success" success="True" time="0.4089" asserts="0" description="C:\projects\powershell-module\tests\Update-RubrikHost.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Update-RubrikHost" executed="True" result="Success" success="True" time="0.1212" asserts="0" description="Public/Update-RubrikHost">
            <results>
              <test-suite type="TestFixture" name="Request Succeeds" executed="True" result="Success" success="True" time="0.0715" asserts="0" description="Request Succeeds">
                <results>
                  <test-case description="Should return proper hostname" name="Public/Update-RubrikHost.Request Succeeds.Should return proper hostname" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0309" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be null" name="Public/Update-RubrikHost.Parameter Validation.Parameter ID cannot be null" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Update-RubrikHost.Parameter Validation.Parameter ID cannot be empty" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Update-RubrikvCenter.Tests.ps1" executed="True" result="Success" success="True" time="0.4119" asserts="0" description="C:\projects\powershell-module\tests\Update-RubrikvCenter.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Update-RubrikvCenter" executed="True" result="Success" success="True" time="0.1207" asserts="0" description="Public/Update-RubrikvCenter">
            <results>
              <test-suite type="TestFixture" name="Request Succeeds" executed="True" result="Success" success="True" time="0.0681" asserts="0" description="Request Succeeds">
                <results>
                  <test-case description="Should return QUEUED status" name="Public/Update-RubrikvCenter.Request Succeeds.Should return QUEUED status" time="0.0291" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Parameter Validation" executed="True" result="Success" success="True" time="0.0331" asserts="0" description="Parameter Validation">
                <results>
                  <test-case description="Parameter ID cannot be null" name="Public/Update-RubrikvCenter.Parameter Validation.Parameter ID cannot be null" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter ID cannot be empty" name="Public/Update-RubrikvCenter.Parameter Validation.Parameter ID cannot be empty" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershell-module\tests\Update-RubrikVMwareVM.Tests.ps1" executed="True" result="Success" success="True" time="0.5179" asserts="0" description="C:\projects\powershell-module\tests\Update-RubrikVMwareVM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Public/Update-RubrikVMwareVM" executed="True" result="Success" success="True" time="0.2271" asserts="0" description="Public/Update-RubrikVMwareVM">
            <results>
              <test-suite type="TestFixture" name="Request Fails" executed="True" result="Success" success="True" time="0.0693" asserts="0" description="Request Fails">
                <results>
                  <test-case description="Invalid vCenter id" name="Public/Update-RubrikVMwareVM.Request Fails.Invalid vCenter id" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Request Succeeds" executed="True" result="Success" success="True" time="0.1307" asserts="0" description="Request Succeeds">
                <results>
                  <test-case description="Get-TestVM should return id / vmmoid" name="Public/Update-RubrikVMwareVM.Request Succeeds.Get-TestVM should return id / vmmoid" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Valid execution based on Get-TestVM" name="Public/Update-RubrikVMwareVM.Request Succeeds.Valid execution based on Get-TestVM" time="0.0291" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>